# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-11-03 12:07+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\python_docs\MakingAnOfficialRelease.py:3
msgid "# Making an Official Release"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:4
msgid ""
"The following instructions are for the release manager and detail how to "
"make an official release."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:5
msgid "## Starting the beta"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:6
msgid "* Decide which commit to start the beta from."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:7
msgid ""
"  - Generally master should be healthy (all checks passing and no known "
"regressions)."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:8
msgid ""
"  - The most recent (significant) change should have had at least one week "
"of alpha testing."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:9
msgid "* Merge this commit into beta"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:10
#: ..\python_docs\MakingAnOfficialRelease.py:50
msgid ""
"* Create a new pre-release with the [Github new release page](https://github."
"com/nvaccess/nvda/releases/new)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:11
msgid "  - Tag Version example: `release-2019.2beta3`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:12
msgid "  - Target: `beta`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:13
msgid "  - Release Title example: `Release 2019.2beta3`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:14
msgid ""
"  - No description necessary for first beta, subsequent betas can describe "
"important additions / removals."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:15
#: ..\python_docs\MakingAnOfficialRelease.py:55
msgid "  - Ensure option \"This is a pre-release\" is checked."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:16
#: ..\python_docs\MakingAnOfficialRelease.py:56
#: ..\python_docs\MakingAnOfficialRelease.py:80
msgid "  - The tag must have a `release-` prefix."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:17
msgid "  - This creates a new annotated tag. E.g. release-2019.2beta3"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:18
msgid "  - beta will now show up on the snapshots page"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:19
msgid ""
"  - Auto update system will start offering it to those checking for betas"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:20
msgid "* Do a review of the `user_docs/en/changes.t2t` file."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:21
msgid "  - Ask for a second review."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:22
msgid "## During the Beta period"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:23
msgid ""
"* Periodically look at recent issues filed, specifically looking for those "
"with `p1`, `crash` or `appcrash` labels."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:24
msgid ""
"* Periodically look for PRs based on beta and ensure they are reviewed then "
"merged or rejected."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:25
msgid ""
"  - As PRs based on the beta branch are merged, periodically tag further "
"betas."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:26
msgid "## End of Beta period"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:27
msgid ""
"* After the final beta, [call a translation freeze](https://github.com/"
"nvaccess/nvda/wiki/StartingTranslationFreeze) for 2 weeks. No more commits "
"should be made to the beta branch at this time."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:28
msgid "## Second translation freeze"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:29
msgid ""
"Normally not required, however, if it is discovered that translations need "
"to be updated after the translation freeze has started/completed then:"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:30
msgid "* Ensure `beta` has the changes requiring re-translation."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:31
msgid "* Re complete the steps in calling a translation freeze."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:32
msgid ""
"* Send an email to the translation mailing list describing the need for new "
"changes and deadline."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:33
msgid "* After translation freeze, "
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:34
msgid "## Release candidates"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:35
msgid "* Ensure it is safe to release an RC."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:36
msgid ""
"  - Looking at recent issues filed, specifically looking for those with "
"`P1`, `crash` or `appcrash` labels."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:37
msgid "* If this is `RC1`, update translations:"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:38
msgid "    1. Log into exbi and su to nvdal10n."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:39
msgid "    2. `cd ~/mr/mainNVDACode`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:40
msgid "    3. `mr up`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:41
msgid "    4. `cd ../srt`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:42
msgid "    5. `mr up`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:43
msgid "    6. `mr svn2nvda`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:44
msgid "  - Note, this updates `beta` with the new translations."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:45
msgid "* Update the `rc` branch"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:46
msgid "  - For RC1, reset the `rc` branch to `beta`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:47
msgid "  - For RC1+, merge `beta` to `rc`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:48
msgid "* Check for PRs against `rc`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:49
msgid ""
"  - look for any PRs based on `rc`, and review and approve/merge or reject "
"them."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:51
msgid "  - Tag Version example: `release-2019.2rc1`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:52
#: ..\python_docs\MakingAnOfficialRelease.py:76
msgid "  - Target: `rc`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:53
msgid "  - Release Title example: `Release 2019.2rc1`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:54
msgid ""
"  - No description necessary for first RC, subsequent RCs can describe "
"important additions / removals."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:57
msgid "  - This creates a new annotated tag. E.g. release-2019.2rc1"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:58
#: ..\python_docs\MakingAnOfficialRelease.py:82
msgid "* Wait for the appVeyor build to complete."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:59
#: ..\python_docs\MakingAnOfficialRelease.py:83
msgid "  - Tagging the release triggers this automatically."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:60
#: ..\python_docs\MakingAnOfficialRelease.py:84
msgid "  - As part of this, the release will be staged."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:61
#: ..\python_docs\MakingAnOfficialRelease.py:85
msgid "* Publish the staged release."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:62
#: ..\python_docs\MakingAnOfficialRelease.py:86
msgid "  - On exbi: `su` to the `nvaccess` user and run `nvdaRelease`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:63
#: ..\python_docs\MakingAnOfficialRelease.py:96
msgid "* Publicise the release."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:64
#: ..\python_docs\MakingAnOfficialRelease.py:97
msgid "  - Add a blog post on  www.nvaccess.org"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:65
msgid ""
"    - Put post in the `Development` category. It should never be placed in "
"the `News` category."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:66
#: ..\python_docs\MakingAnOfficialRelease.py:99
msgid "    - Use a previous blog post as a base."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:67
msgid ""
"    - If this is not the first pre-release, include a list of changes since "
"the last pre-release."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:68
#: ..\python_docs\MakingAnOfficialRelease.py:100
msgid "  - Email nvda-devel list"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:69
#: ..\python_docs\MakingAnOfficialRelease.py:101
msgid "  - Email nvda-translations list"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:70
#: ..\python_docs\MakingAnOfficialRelease.py:102
msgid "  - Post to Twitter"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:71
#: ..\python_docs\MakingAnOfficialRelease.py:109
msgid "* Scan the launcher executable"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:72
#: ..\python_docs\MakingAnOfficialRelease.py:110
msgid ""
"  - Use [VirusTotal](http://www.virustotal.com/). Just submit the direct "
"download URL."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:73
msgid "## Final release"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:74
msgid ""
"* Create a new release with the [Github new release page](https://github.com/"
"nvaccess/nvda/releases/new)"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:75
msgid "  - Tag Version example: `release-2019.2`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:77
msgid "  - Release Title example: `Release 2019.2`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:78
msgid "  - No description necessary for final release"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:79
msgid "  - Ensure option \"This is a pre-release\" is **not** checked."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:81
msgid "  - This creates a new annotated tag. E.g. release-2019.2"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:87
msgid ""
"* Close the release [milestone](https://github.com/nvaccess/nvda/milestones)."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:88
msgid ""
"* Ensure the subsequent milestone is set on issues and pull requests now "
"closed by GitHub automatically."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:89
msgid "  1. Get the milestone id for the new release."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:90
msgid "     - Go to https://github.com/nvaccess/nvda/milestones"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:91
msgid "     - Look at the link URL for the relevant milestone."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:92
msgid "     - The number at the end is the id."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:93
msgid "  2. On exbi, edit `~nvaccess/data/nvaServer.conf`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:94
msgid ""
"  3. In the `[nvdaGithub]` section, change the value of `autoCloseMilestone` "
"to the milestone id obtained in step 1."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:95
msgid ""
"  4. Reload `uwsgi` so the change takes effect: `sudo systemctl reload uwsgi`"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:98
msgid "    - Put post in the `Releases` category."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:103
msgid "  - Post on Facebook."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:104
msgid "  - Post to the NV Access News email list."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:105
msgid "* Ensure `master` version number and changes file are correct"
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:106
msgid ""
"    1. In `source/buildVersion.py`, update the `version_year` and/or "
"`version_major` variables for the next version."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:107
msgid ""
"       - If the next version is the first version for that year (e.g. "
"2018.1), also update `copyrightYears`."
msgstr ""

#: ..\python_docs\MakingAnOfficialRelease.py:108
msgid ""
"    2. Add a heading for the next version in `user_docs/en/changes.t2t`."
msgstr ""

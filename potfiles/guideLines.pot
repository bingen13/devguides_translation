# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-03-28 16:35+Hora de verano romance\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING\n"
"Generated-By: pygettext.py 1.5\n"


#: ..\python_docs\guideLines.py:3
msgid "# Add-on guidelines #"
msgstr ""

#: ..\python_docs\guideLines.py:4
msgid "The following is a set of guidelines that current and potential add-on authors should use when writing add-ons:"
msgstr ""

#: ..\python_docs\guideLines.py:5
msgid "## General ##"
msgstr ""

#: ..\python_docs\guideLines.py:6
msgid "1. Use the addonTemplate from http://github.com/nvdaaddons/addonTemplate"
msgstr ""

#: ..\python_docs\guideLines.py:7
msgid "2. Addon name should not contain \"nvda\", \"plugin\", \"appmodule\", \"globalPlugin\" as part of its name, the user should not have to worry about implementational issues."
msgstr ""

#: ..\python_docs\guideLines.py:8
msgid "3. Addon name should be of the form \"name\", or \"firstSecond\" or \"first_second\""
msgstr ""

#: ..\python_docs\guideLines.py:9
msgid "examples: \"word\", \"dropbox\", \"extendedWinamp\", \"resourceMonitor\" or \"resource_monitor\". Dashes in names are currently not supported by the automated system."
msgstr ""

#: ..\python_docs\guideLines.py:10
msgid "## Versioning ##"
msgstr ""

#: ..\python_docs\guideLines.py:11
msgid "1. Use major dot minor revision, example: 1.0, 1.1 etc. A date-based versioning such as 2016.1 or 16.07 are also supported (termed continuous delivery)."
msgstr ""

#: ..\python_docs\guideLines.py:12
msgid "2. When new functionality is added, update major revision, i.e. 2.0, 3.0. For date-based version, designate a version as a major version."
msgstr ""

#: ..\python_docs\guideLines.py:13
msgid "3. When making a release that has only translation updates, update the minor revision, 3.1, 3.2 etc. Making sure that the new languages are mensioned in a commit message. There is no need to add the new languages to the readme.md."
msgstr ""

#: ..\python_docs\guideLines.py:14
msgid "4. git tag the release, note special git push for tags."
msgstr ""

#: ..\python_docs\guideLines.py:15
msgid "## Release process ##"
msgstr ""

#: ..\python_docs\guideLines.py:16
msgid "1. After releasing an add-on version, if you know that you will be making changes to both old and new major versions, use a separate maintenance branch for the old version (e.g. 1.x, 2.x, etc.) with the maintenance release committed from the old version branch. Then merge the old changes to the new major version. If continuous delivery/date-based versioning is in use, perform development from master."
msgstr ""

#: ..\python_docs\guideLines.py:17
msgid "2. After making a stable release (and generating the add-on installation package), update the version to indicate that its under development for the next version, i.e. 3.1-dev. Note this means that the version number should only be 3.0 for a few minutes, and should be changed to  3.1-dev to indicate new development. The version number can be changed from 3.1-dev to 4.0-dev if/when new features are added."
msgstr ""

#: ..\python_docs\guideLines.py:18
msgid "3. A stable release (such as 1.0, 2.0, 2.1, etc.) should be posted as a stable add-on, provided that there are no critical bugs reported within the past two weeks after the last commit. An add-on (or a version of an add-on) under active development and for which regular commits are made should be listed as a development add-on for testing by users."
msgstr ""

#: ..\python_docs\guideLines.py:19
msgid "4. Stable releases should be made no closer than 2 weeks apart, to allow translators to do their work, unless fixing a chritical/showstopper bug."
msgstr ""

#: ..\python_docs\guideLines.py:20
msgid "5. Announce the availibility of the new version on various NVDA mailing lists (e.g. NVDA add-ons list)."
msgstr ""

#: ..\python_docs\guideLines.py:21
msgid "6. If possible, add-on authors should release the add-on and responsible for pulling in translations via translations workflow."
msgstr ""

#: ..\python_docs\guideLines.py:22
msgid "## Coding Style ##"
msgstr ""

#: ..\python_docs\guideLines.py:23
msgid "1. Indent with either 4 spaces or 1 tab. Tab-based indentation is strongly encouraged."
msgstr ""

#: ..\python_docs\guideLines.py:24
msgid "2. All messages presented to the user should be translatable (with some exceptions), if we are the creator of the message."
msgstr ""

#: ..\python_docs\guideLines.py:25
msgid "3. Messages containing multiple '%s' or %'d' or are of the form"
msgstr ""

#: ..\python_docs\guideLines.py:26
msgid "\"%(name)s .. %(name2)s\" should be rewritten to _(\"{name1} .. {name2}\").format(name1=v1, name2=v2)"
msgstr ""

#: ..\python_docs\guideLines.py:27
msgid "4. Translatable messages should have a translator comment to explain where/when the message is presented, so that the translator can test the  message easily when s/he installs the addon. If the translatable string is similar to main NvDA messages, indicate this as well."
msgstr ""

#: ..\python_docs\guideLines.py:28
msgid "5. If your addon needs to store any configuration:"
msgstr ""

#: ..\python_docs\guideLines.py:29
msgid "    # dont use:"
msgstr ""

#: ..\python_docs\guideLines.py:30
msgid "    config_file = os.path.join(config.getUserDefaultConfigPath(),\"addonName.ini\")"
msgstr ""

#: ..\python_docs\guideLines.py:31
msgid "    # do use:"
msgstr ""

#: ..\python_docs\guideLines.py:32
msgid "    config_file = os.path.join(globalVars.appArgs.configPath,\"addonName.ini\")"
msgstr ""

#: ..\python_docs\guideLines.py:33
msgid "6. Unless there is a good reason for it, it is recommended to use config.conf so add-on settings (particularly for global plugins) can be made available to configuration profiles."
msgstr ""

#: ..\python_docs\guideLines.py:34
msgid "\t7. When working on a new or modifying a major feature, create/use branches other than master branch, as it helps merging and code review (via pull request) process and to find bugs easily."
msgstr ""

#: ..\python_docs\guideLines.py:35
msgid "## Documentation and key bindings ##"
msgstr ""

#: ..\python_docs\guideLines.py:36
msgid "1. If you are adding new keyboard commands as part of your add-on, be sure to consult NVDA Command Quick Reference and other community supported add-on commands before assigning a new command."
msgstr ""

#: ..\python_docs\guideLines.py:37
msgid "2. For NvDA 2013.3 or later: If you wish to categorize your keyboard bindings (for easier identification so the user can change it), either assign the same category as NVDA script categories (if your add-on enhances some parts of NVDA such as adding a shortcut to a preferences dialog) or create new categories if needed (if the add-on provides other features such as support for advanced features of a program)."
msgstr ""

#: ..\python_docs\guideLines.py:38
msgid "3. Please provide a readme.md file listing changes between versions, shortcut keys (if any) and usage notes and other information, see one of the other git repos for examples."
msgstr ""

#: ..\python_docs\guideLines.py:39
msgid "4. Files addon/doc/*/readme.md should not be translated by hand and committed to the repository, but should be generated and committed from the translation system."
msgstr ""

#: ..\python_docs\guideLines.py:40
msgid "5. If you translate an addon to your language and commit to git, please inform your nvda translation maintainer for your language so that work is not duplicated, in any case it is better to keep translations on the translation system."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-02-19 10:31+Hora estándar romance\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING\n"
"Generated-By: pygettext.py 1.5\n"


#: ..\python_docs\developer_guide.py:3 ..\python_docs\developer_guide.py:6
msgid "---"
msgstr ""

#: ..\python_docs\developer_guide.py:4
msgid "generator: 'http://txt2tags.sf.net'"
msgstr ""

#: ..\python_docs\developer_guide.py:5
msgid "title: 'NVDA 2017.4 Developer Guide'"
msgstr ""

#: ..\python_docs\developer_guide.py:7
msgid "NVDA 2017.4 Developer Guide"
msgstr ""

#: ..\python_docs\developer_guide.py:8
msgid "==========================="
msgstr ""

#: ..\python_docs\developer_guide.py:9
msgid "[]{#toc}"
msgstr ""

#: ..\python_docs\developer_guide.py:10
msgid "Table of Contents"
msgstr ""

#: ..\python_docs\developer_guide.py:11
msgid "-----------------"
msgstr ""

#: ..\python_docs\developer_guide.py:12
msgid "-   [1. Introduction](#toc2)"
msgstr ""

#: ..\python_docs\developer_guide.py:13
msgid "    -   [1.1. A Note About Python](#toc3)"
msgstr ""

#: ..\python_docs\developer_guide.py:14
msgid "-   [2. Translation](#toc4)"
msgstr ""

#: ..\python_docs\developer_guide.py:15
msgid "    -   [2.1. Character Descriptions](#toc5)"
msgstr ""

#: ..\python_docs\developer_guide.py:16
msgid "    -   [2.2. Symbol Pronunciation](#toc6)"
msgstr ""

#: ..\python_docs\developer_guide.py:17
msgid "        -   [2.2.1. Defining Complex Symbols](#toc7)"
msgstr ""

#: ..\python_docs\developer_guide.py:18
msgid "        -   [2.2.2. Defining Symbol Information](#toc8)"
msgstr ""

#: ..\python_docs\developer_guide.py:19
msgid "-   [3. Plugins](#toc9)"
msgstr ""

#: ..\python_docs\developer_guide.py:20
msgid "    -   [3.1. Overview](#toc10)"
msgstr ""

#: ..\python_docs\developer_guide.py:21
msgid "    -   [3.2. Types of Plugins](#toc11)"
msgstr ""

#: ..\python_docs\developer_guide.py:22
msgid "    -   [3.3. Basics of an App Module](#toc12)"
msgstr ""

#: ..\python_docs\developer_guide.py:23
msgid "    -   [3.4. Example 1: An App Module that Beeps on Focus Change"
msgstr ""

#: ..\python_docs\developer_guide.py:24
msgid "        Events](#Example1)"
msgstr ""

#: ..\python_docs\developer_guide.py:25
msgid "    -   [3.5. Basics of a Global Plugin](#toc14)"
msgstr ""

#: ..\python_docs\developer_guide.py:26
msgid "    -   [3.6. Example 2: a Global Plugin Providing a Script to Announce"
msgstr ""

#: ..\python_docs\developer_guide.py:27
msgid "        the NVDA Version](#toc15)"
msgstr ""

#: ..\python_docs\developer_guide.py:28
msgid "    -   [3.7. NVDA Objects](#toc16)"
msgstr ""

#: ..\python_docs\developer_guide.py:29
msgid "    -   [3.8. Scripts and Gesture Bindings](#toc17)"
msgstr ""

#: ..\python_docs\developer_guide.py:30
msgid "    -   [3.9. Example 3: A Global Plugin to Find out Window Class and"
msgstr ""

#: ..\python_docs\developer_guide.py:31
msgid "        Control ID](#toc18)"
msgstr ""

#: ..\python_docs\developer_guide.py:32
msgid "    -   [3.10. Events](#toc19)"
msgstr ""

#: ..\python_docs\developer_guide.py:33
msgid "    -   [3.11. the App Module SleepMode variable](#toc20)"
msgstr ""

#: ..\python_docs\developer_guide.py:34
msgid "    -   [3.12. Example 4: A Sleep Mode App Module](#toc21)"
msgstr ""

#: ..\python_docs\developer_guide.py:35
msgid "    -   [3.13. Providing Custom NVDA Object Classes](#toc22)"
msgstr ""

#: ..\python_docs\developer_guide.py:36
msgid "    -   [3.14. Example 5: Command to Retrieve the Length of Text in an"
msgstr ""

#: ..\python_docs\developer_guide.py:37
msgid "        Edit Field Using a Custom NVDA Object](#toc23)"
msgstr ""

#: ..\python_docs\developer_guide.py:38
msgid "    -   [3.15. Making Small Changes to an NVDA Object in App"
msgstr ""

#: ..\python_docs\developer_guide.py:39
msgid "        Modules](#toc24)"
msgstr ""

#: ..\python_docs\developer_guide.py:40
msgid "    -   [3.16. Example 6: Labelling the Notepad Edit Field Using"
msgstr ""

#: ..\python_docs\developer_guide.py:41
msgid "        event\\_NVDAObject\\_init](#toc25)"
msgstr ""

#: ..\python_docs\developer_guide.py:42
msgid "-   [4. Packaging Code as NVDA Add-ons](#toc26)"
msgstr ""

#: ..\python_docs\developer_guide.py:43
msgid "    -   [4.1. Non-ASCII File Names in Zip Archives](#toc27)"
msgstr ""

#: ..\python_docs\developer_guide.py:44
msgid "    -   [4.2. Manifest Files](#toc28)"
msgstr ""

#: ..\python_docs\developer_guide.py:45
msgid "        -   [4.2.1. Available Fields](#toc29)"
msgstr ""

#: ..\python_docs\developer_guide.py:46
msgid "        -   [4.2.2. An Example Manifest File](#toc30)"
msgstr ""

#: ..\python_docs\developer_guide.py:47
msgid "    -   [4.3. Plugins and Drivers](#toc31)"
msgstr ""

#: ..\python_docs\developer_guide.py:48
msgid "    -   [4.4. Optional install / Uninstall code](#toc32)"
msgstr ""

#: ..\python_docs\developer_guide.py:49
msgid "        -   [4.4.1. the onInstall function](#toc33)"
msgstr ""

#: ..\python_docs\developer_guide.py:50
msgid "        -   [4.4.2. The onUninstall Function](#toc34)"
msgstr ""

#: ..\python_docs\developer_guide.py:51
msgid "    -   [4.5. Localizing Add-ons](#toc35)"
msgstr ""

#: ..\python_docs\developer_guide.py:52
msgid "        -   [4.5.1. Locale-specific Manifest Files](#toc36)"
msgstr ""

#: ..\python_docs\developer_guide.py:53
msgid "        -   [4.5.2. Locale-specific Messages](#toc37)"
msgstr ""

#: ..\python_docs\developer_guide.py:54
msgid "    -   [4.6. Add-on Documentation](#AddonDoc)"
msgstr ""

#: ..\python_docs\developer_guide.py:55
msgid "-   [5. NVDA Python Console](#PythonConsole)"
msgstr ""

#: ..\python_docs\developer_guide.py:56
msgid "    -   [5.1. Usage](#toc40)"
msgstr ""

#: ..\python_docs\developer_guide.py:57
msgid "    -   [5.2. Namespace](#PythonConsoleNamespace)"
msgstr ""

#: ..\python_docs\developer_guide.py:58
msgid "        -   [5.2.1. Automatic Imports](#toc42)"
msgstr ""

#: ..\python_docs\developer_guide.py:59
msgid "        -   [5.2.2. Snapshot Variables](#PythonConsoleSnapshotVariables)"
msgstr ""

#: ..\python_docs\developer_guide.py:60
msgid "-   [6. Remote Python Console](#toc44)"
msgstr ""

#: ..\python_docs\developer_guide.py:61
msgid "    -   [6.1. Usage](#toc45)"
msgstr ""

#: ..\python_docs\developer_guide.py:62
msgid "[]{#toc2}"
msgstr ""

#: ..\python_docs\developer_guide.py:63
msgid "1. Introduction"
msgstr ""

#: ..\python_docs\developer_guide.py:64
msgid "---------------"
msgstr ""

#: ..\python_docs\developer_guide.py:65
msgid "This guide provides information concerning NVDA development, including"
msgstr ""

#: ..\python_docs\developer_guide.py:66
msgid "translation and the development of components for NVDA."
msgstr ""

#: ..\python_docs\developer_guide.py:67
msgid "[]{#toc3}"
msgstr ""

#: ..\python_docs\developer_guide.py:68
msgid "### 1.1. A Note About Python"
msgstr ""

#: ..\python_docs\developer_guide.py:69
msgid "NVDA and its components are primarily written in the Python programming"
msgstr ""

#: ..\python_docs\developer_guide.py:70
msgid "language. It is not the goal of this guide to teach you Python, though"
msgstr ""

#: ..\python_docs\developer_guide.py:71
msgid "examples are provided through out this guide which will help to"
msgstr ""

#: ..\python_docs\developer_guide.py:72
msgid "familiarise you with the Python syntax. Documentation and other"
msgstr ""

#: ..\python_docs\developer_guide.py:73
msgid "resources related to the Python language can be found at"
msgstr ""

#: ..\python_docs\developer_guide.py:74
msgid "[www.python.org/](http://www.python.org/)"
msgstr ""

#: ..\python_docs\developer_guide.py:75
msgid "[]{#toc4}"
msgstr ""

#: ..\python_docs\developer_guide.py:76
msgid "2. Translation"
msgstr ""

#: ..\python_docs\developer_guide.py:77
msgid "--------------"
msgstr ""

#: ..\python_docs\developer_guide.py:78
msgid "In order to support multiple languages/locales, NVDA must be translated"
msgstr ""

#: ..\python_docs\developer_guide.py:79
msgid "and data specific to the locale must be provided. This section only"
msgstr ""

#: ..\python_docs\developer_guide.py:80
msgid "includes information on custom NVDA file formats required for"
msgstr ""

#: ..\python_docs\developer_guide.py:81
msgid "translation. Other items need to be translated, such as the NVDA user"
msgstr ""

#: ..\python_docs\developer_guide.py:82
msgid "interface and documentation, but these use standard file formats. For"
msgstr ""

#: ..\python_docs\developer_guide.py:83
msgid "complete documentation about translating NVDA, please see"
msgstr ""

#: ..\python_docs\developer_guide.py:84
msgid "<https://github.com/nvaccess/nvda/wiki/Translating>"
msgstr ""

#: ..\python_docs\developer_guide.py:85
msgid "[]{#toc5}"
msgstr ""

#: ..\python_docs\developer_guide.py:86
msgid "### 2.1. Character Descriptions"
msgstr ""

#: ..\python_docs\developer_guide.py:87
msgid "Sometimes, it can be very difficult or even impossible to distinguish"
msgstr ""

#: ..\python_docs\developer_guide.py:88
msgid "one character from another. For example, two characters might be"
msgstr ""

#: ..\python_docs\developer_guide.py:89
msgid "pronounced the same way, even though they are actually different"
msgstr ""

#: ..\python_docs\developer_guide.py:90
msgid "characters. To help users when this occurs, character descriptions can"
msgstr ""

#: ..\python_docs\developer_guide.py:91
msgid "be provided which describe the character in a unique way."
msgstr ""

#: ..\python_docs\developer_guide.py:92
msgid "Character descriptions can be provided for a locale in a file named"
msgstr ""

#: ..\python_docs\developer_guide.py:93
msgid "characterDescriptions.dic in the directory for the locale. This is a"
msgstr ""

#: ..\python_docs\developer_guide.py:94
msgid "UTF-8 encoded text file. Blank lines and lines beginning with a \\\"\\#\\\""
msgstr ""

#: ..\python_docs\developer_guide.py:95
msgid "character are ignored. All other lines should contain a character,"
msgstr ""

#: ..\python_docs\developer_guide.py:96
msgid "followed by a tab, then one or more descriptions separated by tabs."
msgstr ""

#: ..\python_docs\developer_guide.py:97
msgid "For example:"
msgstr ""

#: ..\python_docs\developer_guide.py:98
msgid "    # This is a comment."
msgstr ""

#: ..\python_docs\developer_guide.py:99
msgid "    a   alpha"
msgstr ""

#: ..\python_docs\developer_guide.py:100
msgid "    b   bravo"
msgstr ""

#: ..\python_docs\developer_guide.py:101
msgid "See the file locale\\\\en\\\\characterDescriptions.dic for a full example."
msgstr ""

#: ..\python_docs\developer_guide.py:102
msgid "In most cases, the characters in this file should be a single lower case"
msgstr ""

#: ..\python_docs\developer_guide.py:103
msgid "character. It is assumed that characters will have the same description"
msgstr ""

#: ..\python_docs\developer_guide.py:104
msgid "regardless of their case, so upper case characters are converted to"
msgstr ""

#: ..\python_docs\developer_guide.py:105
msgid "lower case before looking up their character descriptions."
msgstr ""

#: ..\python_docs\developer_guide.py:106
msgid "[]{#toc6}"
msgstr ""

#: ..\python_docs\developer_guide.py:107
msgid "### 2.2. Symbol Pronunciation"
msgstr ""

#: ..\python_docs\developer_guide.py:108
msgid "It is often useful to hear punctuation and other symbols pronounced as"
msgstr ""

#: ..\python_docs\developer_guide.py:109
msgid "words when reading text, particularly when moving by character."
msgstr ""

#: ..\python_docs\developer_guide.py:110
msgid "Unfortunately, the pronunciation of symbols is inconsistent between"
msgstr ""

#: ..\python_docs\developer_guide.py:111
msgid "speech synthesisers and many synthesisers do not speak many symbols"
msgstr ""

#: ..\python_docs\developer_guide.py:112
msgid "and/or do not allow control over what symbols are spoken. Therefore,"
msgstr ""

#: ..\python_docs\developer_guide.py:113
msgid "NVDA allows information about symbol pronunciation to be provided."
msgstr ""

#: ..\python_docs\developer_guide.py:114
msgid "This is done for a locale by providing a file named symbols.dic in the"
msgstr ""

#: ..\python_docs\developer_guide.py:115
msgid "directory for the locale. This is a UTF-8 encoded text file. Blank lines"
msgstr ""

#: ..\python_docs\developer_guide.py:116
msgid "and lines beginning with a \\\"\\#\\\" character are ignored. All locales"
msgstr ""

#: ..\python_docs\developer_guide.py:117
msgid "implicitly inherit the symbol information for English, though any of"
msgstr ""

#: ..\python_docs\developer_guide.py:118
msgid "this information can be overridden."
msgstr ""

#: ..\python_docs\developer_guide.py:119
msgid "The file contains two sections."
msgstr ""

#: ..\python_docs\developer_guide.py:120
msgid "[]{#toc7}"
msgstr ""

#: ..\python_docs\developer_guide.py:121
msgid "#### 2.2.1. Defining Complex Symbols"
msgstr ""

#: ..\python_docs\developer_guide.py:122
msgid "The first section is optional and defines regular expression patterns"
msgstr ""

#: ..\python_docs\developer_guide.py:123
msgid "for complex symbols. Complex symbols are symbols which aren\\'t simply a"
msgstr ""

#: ..\python_docs\developer_guide.py:124
msgid "character or sequence of characters, but instead require a more"
msgstr ""

#: ..\python_docs\developer_guide.py:125
msgid "complicated match. An example is the full stop (.) sentence ending in"
msgstr ""

#: ..\python_docs\developer_guide.py:126
msgid "English. The \\\".\\\" is used for multiple purposes, so a more complicated"
msgstr ""

#: ..\python_docs\developer_guide.py:127
msgid "check is required to determine whether this refers to the end of a"
msgstr ""

#: ..\python_docs\developer_guide.py:128
msgid "sentence."
msgstr ""

#: ..\python_docs\developer_guide.py:129
msgid "The complex symbols section begins with the line:"
msgstr ""

#: ..\python_docs\developer_guide.py:130
msgid "    complexSymbols:"
msgstr ""

#: ..\python_docs\developer_guide.py:131
msgid "Subsequent lines contain a textual identifier used to identify the"
msgstr ""

#: ..\python_docs\developer_guide.py:132
msgid "symbol, a tab and the regular expression pattern for that symbol. For"
msgstr ""

#: ..\python_docs\developer_guide.py:133
msgid "example:"
msgstr ""

#: ..\python_docs\developer_guide.py:134
msgid "    . sentence ending   (?<=[^\\s.])\\.(?=[\\\"')\\s]|$)"
msgstr ""

#: ..\python_docs\developer_guide.py:135
msgid "Again, the English symbols are inherited by all other locales, so you"
msgstr ""

#: ..\python_docs\developer_guide.py:136
msgid "need not include any complex symbols already defined for English."
msgstr ""

#: ..\python_docs\developer_guide.py:137
msgid "[]{#toc8}"
msgstr ""

#: ..\python_docs\developer_guide.py:138
msgid "#### 2.2.2. Defining Symbol Information"
msgstr ""

#: ..\python_docs\developer_guide.py:139
msgid "The second section provides information about when and how to pronounce"
msgstr ""

#: ..\python_docs\developer_guide.py:140
msgid "all symbols. It begins with the line:"
msgstr ""

#: ..\python_docs\developer_guide.py:141
msgid "    symbols:"
msgstr ""

#: ..\python_docs\developer_guide.py:142
msgid "Subsequent lines should contain several fields separated by tabs. The"
msgstr ""

#: ..\python_docs\developer_guide.py:143
msgid "only mandatory fields are the identifier and replacement. The default"
msgstr ""

#: ..\python_docs\developer_guide.py:144
msgid "will be used for omitted fields. The fields are as follows:"
msgstr ""

#: ..\python_docs\developer_guide.py:145
msgid "-   identifier: The identifier of the symbol. In most cases, this is"
msgstr ""

#: ..\python_docs\developer_guide.py:146
msgid "    just the character or characters of the symbol. However, it can also"
msgstr ""

#: ..\python_docs\developer_guide.py:147
msgid "    be the identifier of a complex symbol. Certain characters cannot be"
msgstr ""

#: ..\python_docs\developer_guide.py:148
msgid "    typed into the file, so the following special sequences can be used:"
msgstr ""

#: ..\python_docs\developer_guide.py:149
msgid "    -   \\\\0: null"
msgstr ""

#: ..\python_docs\developer_guide.py:150
msgid "    -   \\\\t: tab"
msgstr ""

#: ..\python_docs\developer_guide.py:151
msgid "    -   \\\\n: line feed"
msgstr ""

#: ..\python_docs\developer_guide.py:152
msgid "    -   \\\\r: carriage return"
msgstr ""

#: ..\python_docs\developer_guide.py:153
msgid "    -   \\\\f: form feed"
msgstr ""

#: ..\python_docs\developer_guide.py:154
msgid "    -   \\\\\\#: \\# character (needed because \\# at the start of a line"
msgstr ""

#: ..\python_docs\developer_guide.py:155
msgid "        denotes a comment)"
msgstr ""

#: ..\python_docs\developer_guide.py:156
msgid "-   replacement: The text which should be spoken for the symbol."
msgstr ""

#: ..\python_docs\developer_guide.py:157
msgid "-   level: The symbol level at which the symbol should be spoken. The"
msgstr ""

#: ..\python_docs\developer_guide.py:158
msgid "    symbol level is configured by the user and specifies the amount of"
msgstr ""

#: ..\python_docs\developer_guide.py:159
msgid "    symbols that should be spoken. This field should contain one of the"
msgstr ""

#: ..\python_docs\developer_guide.py:160
msgid "    levels \\\"none\\\", \\\"some\\\", \\\"most\\\", \\\"all\\\" or \\\"char\\\", or \\\"-\\\""
msgstr ""

#: ..\python_docs\developer_guide.py:161
msgid "    to use the default. \\\"char\\\" means that the symbol should only be"
msgstr ""

#: ..\python_docs\developer_guide.py:162
msgid "    pronounced when moving by character. The default is to inherit the"
msgstr ""

#: ..\python_docs\developer_guide.py:163
msgid "    value or \\\"all\\\" if there is nothing to inherit."
msgstr ""

#: ..\python_docs\developer_guide.py:164
msgid "-   preserve: Whether the symbol itself should be preserved to"
msgstr ""

#: ..\python_docs\developer_guide.py:165
msgid "    facilitate correct pronunciation by the synthesiser. For example,"
msgstr ""

#: ..\python_docs\developer_guide.py:166
msgid "    symbols which cause pauses or inflection (such as the comma in"
msgstr ""

#: ..\python_docs\developer_guide.py:167
msgid "    English) should be preserved. This field should be one of the"
msgstr ""

#: ..\python_docs\developer_guide.py:168
msgid "    following:"
msgstr ""

#: ..\python_docs\developer_guide.py:169
msgid "    -   never: Never preserve the symbol."
msgstr ""

#: ..\python_docs\developer_guide.py:170
msgid "    -   always: Always preserve the symbol."
msgstr ""

#: ..\python_docs\developer_guide.py:171
msgid "    -   norep: Only preserve the symbol if it is not being replaced;"
msgstr ""

#: ..\python_docs\developer_guide.py:172
msgid "        i.e. the user has set symbol level lower than the level of this"
msgstr ""

#: ..\python_docs\developer_guide.py:173
msgid "        symbol."
msgstr ""

#: ..\python_docs\developer_guide.py:174
msgid "    -   -: Use the default."
msgstr ""

#: ..\python_docs\developer_guide.py:175
msgid "    The default is to inherit the value or \\\"never\\\" if there is nothing"
msgstr ""

#: ..\python_docs\developer_guide.py:176
msgid "    to inherit."
msgstr ""

#: ..\python_docs\developer_guide.py:177
msgid "Finally, a display name for the symbol can be provided in a comment"
msgstr ""

#: ..\python_docs\developer_guide.py:178
msgid "after a tab at the end of the line. This will be shown to users when"
msgstr ""

#: ..\python_docs\developer_guide.py:179
msgid "editing the symbol information and is especially useful for translators"
msgstr ""

#: ..\python_docs\developer_guide.py:180
msgid "to define translated names for English complex symbols."
msgstr ""

#: ..\python_docs\developer_guide.py:181
msgid "Here are some examples:"
msgstr ""

#: ..\python_docs\developer_guide.py:182
msgid "    (   left paren  most"
msgstr ""

#: ..\python_docs\developer_guide.py:183
msgid "This means that the \\\"(\\\" character should be spoken as \\\"left paren\\\""
msgstr ""

#: ..\python_docs\developer_guide.py:184
msgid "only when the symbol level is set to most or higher; i.e. most or all."
msgstr ""

#: ..\python_docs\developer_guide.py:185
msgid "    ,   comma   all always"
msgstr ""

#: ..\python_docs\developer_guide.py:186
msgid "This means that the \\\",\\\" character should be spoken as \\\"comma\\\" when"
msgstr ""

#: ..\python_docs\developer_guide.py:187
msgid "the symbol level is set to all and that the character itself should"
msgstr ""

#: ..\python_docs\developer_guide.py:188
msgid "always be preserved so that the synthesiser will pause appropriately."
msgstr ""

#: ..\python_docs\developer_guide.py:189
msgid "    . sentence ending   point   # . fin de phrase"
msgstr ""

#: ..\python_docs\developer_guide.py:190
msgid "This line appears in the French symbols.dic file. It means that the \\\"."
msgstr ""

#: ..\python_docs\developer_guide.py:191
msgid "sentence ending\\\" complex symbol should be spoken as \\\"point\\\". Level"
msgstr ""

#: ..\python_docs\developer_guide.py:192
msgid "and preserve are not specified, so they will be taken from English. A"
msgstr ""

#: ..\python_docs\developer_guide.py:193
msgid "display name is provided so that French users will know what the symbol"
msgstr ""

#: ..\python_docs\developer_guide.py:194
msgid "represents."
msgstr ""

#: ..\python_docs\developer_guide.py:195
msgid "Please see the file locale\\\\en\\\\symbols.dic for the English definitions"
msgstr ""

#: ..\python_docs\developer_guide.py:196
msgid "which are inherited for all locales. This is also a good full example."
msgstr ""

#: ..\python_docs\developer_guide.py:197
msgid "[]{#toc9}"
msgstr ""

#: ..\python_docs\developer_guide.py:198
msgid "3. Plugins"
msgstr ""

#: ..\python_docs\developer_guide.py:199
msgid "----------"
msgstr ""

#: ..\python_docs\developer_guide.py:200
msgid "[]{#toc10}"
msgstr ""

#: ..\python_docs\developer_guide.py:201
msgid "### 3.1. Overview"
msgstr ""

#: ..\python_docs\developer_guide.py:202
msgid "Plugins allow you to customize the way NVDA behaves overall or within a"
msgstr ""

#: ..\python_docs\developer_guide.py:203
msgid "particular application. They are able to:"
msgstr ""

#: ..\python_docs\developer_guide.py:204
msgid "-   Respond to particular events such as focus and object property"
msgstr ""

#: ..\python_docs\developer_guide.py:205
msgid "    changes; e.g. when a control changes its name."
msgstr ""

#: ..\python_docs\developer_guide.py:206
msgid "-   Implement commands which are bound to particular key presses or"
msgstr ""

#: ..\python_docs\developer_guide.py:207
msgid "    other input."
msgstr ""

#: ..\python_docs\developer_guide.py:208
msgid "-   Customise the behaviour of and implement additional functionality"
msgstr ""

#: ..\python_docs\developer_guide.py:209
msgid "    for particular controls."
msgstr ""

#: ..\python_docs\developer_guide.py:210
msgid "-   Customise or add new support for text content and complex documents."
msgstr ""

#: ..\python_docs\developer_guide.py:211
msgid "This section provides an introduction to developing plugins. Developers"
msgstr ""

#: ..\python_docs\developer_guide.py:212
msgid "should consult the code documentation for a complete reference."
msgstr ""

#: ..\python_docs\developer_guide.py:213
msgid "[]{#toc11}"
msgstr ""

#: ..\python_docs\developer_guide.py:214
msgid "### 3.2. Types of Plugins"
msgstr ""

#: ..\python_docs\developer_guide.py:215
msgid "There are two types of plugins. These are:"
msgstr ""

#: ..\python_docs\developer_guide.py:216
msgid "-   App Modules: code specific to a particular application. The App"
msgstr ""

#: ..\python_docs\developer_guide.py:217
msgid "    Module receives all events for a particular application, even if"
msgstr ""

#: ..\python_docs\developer_guide.py:218
msgid "    that application is not currently active. When the application is"
msgstr ""

#: ..\python_docs\developer_guide.py:219
msgid "    active, any commands that the App Module has bound to key presses or"
msgstr ""

#: ..\python_docs\developer_guide.py:220
msgid "    other input can be executed by the user."
msgstr ""

#: ..\python_docs\developer_guide.py:221
msgid "-   Global Plugins: code global to NVDA; i.e. it is used in all"
msgstr ""

#: ..\python_docs\developer_guide.py:222
msgid "    applications. Global Plugins Receive all events for all controls in"
msgstr ""

#: ..\python_docs\developer_guide.py:223
msgid "    the Operating System. Any commands bound by a Global Plugin can be"
msgstr ""

#: ..\python_docs\developer_guide.py:224
msgid "    executed by the user wherever they are in the operating system,"
msgstr ""

#: ..\python_docs\developer_guide.py:225
msgid "    regardless of application."
msgstr ""

#: ..\python_docs\developer_guide.py:226
msgid "If you wish to improve NVDA\\'s access to a particular application, it is"
msgstr ""

#: ..\python_docs\developer_guide.py:227
msgid "most likely you will want to write an App Module. In contrast, if you"
msgstr ""

#: ..\python_docs\developer_guide.py:228
msgid "wish to add some overall functionality to NVDA (e.g. a script that"
msgstr ""

#: ..\python_docs\developer_guide.py:229
msgid "announces current Wireless network strength while in any application),"
msgstr ""

#: ..\python_docs\developer_guide.py:230
msgid "then a Global Plugin is what you want."
msgstr ""

#: ..\python_docs\developer_guide.py:231
msgid "Both App Modules and Global Plugins share a common look and feel. They"
msgstr ""

#: ..\python_docs\developer_guide.py:232
msgid "are both Python source files (with a .py extension), they both define a"
msgstr ""

#: ..\python_docs\developer_guide.py:233
msgid "special class containing all events, scripts and bindings, and they both"
msgstr ""

#: ..\python_docs\developer_guide.py:234
msgid "may define custom classes to access controls, text content and complex"
msgstr ""

#: ..\python_docs\developer_guide.py:235
msgid "documents. However, they do differ in some ways."
msgstr ""

#: ..\python_docs\developer_guide.py:236
msgid "The following few sections will talk separately about App Modules and"
msgstr ""

#: ..\python_docs\developer_guide.py:237
msgid "Global Plugins. After this point, discussion is again more general."
msgstr ""

#: ..\python_docs\developer_guide.py:238
msgid "[]{#toc12}"
msgstr ""

#: ..\python_docs\developer_guide.py:239
msgid "### 3.3. Basics of an App Module"
msgstr ""

#: ..\python_docs\developer_guide.py:240
msgid "App Module files have a .py extension, and are named the same as the"
msgstr ""

#: ..\python_docs\developer_guide.py:241
msgid "main executable of the application for which you wish them to be used."
msgstr ""

#: ..\python_docs\developer_guide.py:242
msgid "For example, an App Module for notepad would be called notepad.py, as"
msgstr ""

#: ..\python_docs\developer_guide.py:243
msgid "notepad\\'s main executable is called notepad.exe."
msgstr ""

#: ..\python_docs\developer_guide.py:244
msgid "App Module files must be placed in the appModules subdirectory of the"
msgstr ""

#: ..\python_docs\developer_guide.py:245
msgid "user\\'s NVDA user configuration directory. For more information on where"
msgstr ""

#: ..\python_docs\developer_guide.py:246
msgid "to find the user configuration directory, please see the NVDA user"
msgstr ""

#: ..\python_docs\developer_guide.py:247 ..\python_docs\developer_guide.py:302
msgid "guide."
msgstr ""

#: ..\python_docs\developer_guide.py:248
msgid "App Modules must define a class called AppModule, which inherits from"
msgstr ""

#: ..\python_docs\developer_guide.py:249
msgid "appModuleHandler.AppModule. This class can then define event and script"
msgstr ""

#: ..\python_docs\developer_guide.py:250
msgid "methods, gesture bindings and other code. This will all be covered in"
msgstr ""

#: ..\python_docs\developer_guide.py:251
msgid "depth later."
msgstr ""

#: ..\python_docs\developer_guide.py:252
msgid "NVDA loads an App Module for an application as soon as it notices the"
msgstr ""

#: ..\python_docs\developer_guide.py:253
msgid "application is running. The App Module is unloaded once the application"
msgstr ""

#: ..\python_docs\developer_guide.py:254
msgid "is closed or when NVDA is exiting."
msgstr ""

#: ..\python_docs\developer_guide.py:255
msgid "[]{#Example1}"
msgstr ""

#: ..\python_docs\developer_guide.py:256
msgid "### 3.4. Example 1: An App Module that Beeps on Focus Change Events"
msgstr ""

#: ..\python_docs\developer_guide.py:257
msgid "The following example App Module makes NVDA beep each time the focus"
msgstr ""

#: ..\python_docs\developer_guide.py:258
msgid "changes within the notepad application. This example shows you the basic"
msgstr ""

#: ..\python_docs\developer_guide.py:259
msgid "layout of an App Module."
msgstr ""

#: ..\python_docs\developer_guide.py:260 ..\python_docs\developer_guide.py:314
#: ..\python_docs\developer_guide.py:496
msgid "Copy and paste the code between (but not including) the start and end"
msgstr ""

#: ..\python_docs\developer_guide.py:261
msgid "markers into a new text file called notepad.py, which should be saved in"
msgstr ""

#: ..\python_docs\developer_guide.py:262
msgid "the AppModules subdirectory. Be very careful to keep all tabs and spaces"
msgstr ""

#: ..\python_docs\developer_guide.py:263
msgid "intact."
msgstr ""

#: ..\python_docs\developer_guide.py:264
msgid "Once saved in the correct location, either restart NVDA or choose Reload"
msgstr ""

#: ..\python_docs\developer_guide.py:265 ..\python_docs\developer_guide.py:319
#: ..\python_docs\developer_guide.py:501
msgid "Plugins found under Tools in the NVDA menu."
msgstr ""

#: ..\python_docs\developer_guide.py:266
msgid "Finally, open Notepad and move the focus around the application; e.g."
msgstr ""

#: ..\python_docs\developer_guide.py:267
msgid "move along the menu bar, open some dialog boxes, etc. You should hear"
msgstr ""

#: ..\python_docs\developer_guide.py:268
msgid "beeps each time the focus changes. Note though that if you move outside"
msgstr ""

#: ..\python_docs\developer_guide.py:269
msgid "of Notepad - for instance, to Windows Explorer - you do not hear beeps."
msgstr ""

#: ..\python_docs\developer_guide.py:270 ..\python_docs\developer_guide.py:322
#: ..\python_docs\developer_guide.py:502 ..\python_docs\developer_guide.py:592
#: ..\python_docs\developer_guide.py:643 ..\python_docs\developer_guide.py:677
#: ..\python_docs\developer_guide.py:733
msgid "    --- start ---"
msgstr ""

#: ..\python_docs\developer_guide.py:271
msgid "    # Notepad App Module for NVDA"
msgstr ""

#: ..\python_docs\developer_guide.py:272
msgid "    # Developer guide example 1"
msgstr ""

#: ..\python_docs\developer_guide.py:273 ..\python_docs\developer_guide.py:593
#: ..\python_docs\developer_guide.py:644 ..\python_docs\developer_guide.py:678
msgid "    import appModuleHandler"
msgstr ""

#: ..\python_docs\developer_guide.py:274 ..\python_docs\developer_guide.py:594
#: ..\python_docs\developer_guide.py:648 ..\python_docs\developer_guide.py:680
msgid "    class AppModule(appModuleHandler.AppModule):"
msgstr ""

#: ..\python_docs\developer_guide.py:275
msgid "        def event_gainFocus(self, obj, nextHandler):"
msgstr ""

#: ..\python_docs\developer_guide.py:276
msgid "            import tones"
msgstr ""

#: ..\python_docs\developer_guide.py:277
msgid "            tones.beep(550, 50)"
msgstr ""

#: ..\python_docs\developer_guide.py:278
msgid "            nextHandler()"
msgstr ""

#: ..\python_docs\developer_guide.py:279 ..\python_docs\developer_guide.py:334
#: ..\python_docs\developer_guide.py:523 ..\python_docs\developer_guide.py:596
#: ..\python_docs\developer_guide.py:658 ..\python_docs\developer_guide.py:684
#: ..\python_docs\developer_guide.py:740
msgid "    --- end ---"
msgstr ""

#: ..\python_docs\developer_guide.py:280
msgid "This App Module file starts with two comment lines, which describe what"
msgstr ""

#: ..\python_docs\developer_guide.py:281
msgid "the file is for."
msgstr ""

#: ..\python_docs\developer_guide.py:282
msgid "It then imports the appModuleHandler module, so that the App Module then"
msgstr ""

#: ..\python_docs\developer_guide.py:283
msgid "has access to the base AppModule class."
msgstr ""

#: ..\python_docs\developer_guide.py:284
msgid "Next, it defines a class called AppModule, which is inherited from"
msgstr ""

#: ..\python_docs\developer_guide.py:285
msgid "appModuleHandler.AppModule."
msgstr ""

#: ..\python_docs\developer_guide.py:286 ..\python_docs\developer_guide.py:344
msgid "Inside this class, it defines 1 or more events, scripts or gesture"
msgstr ""

#: ..\python_docs\developer_guide.py:287
msgid "bindings. In this example, it defines one event method for gainFocus"
msgstr ""

#: ..\python_docs\developer_guide.py:288
msgid "events (event\\_gainFocus), which plays a short beep each time it is"
msgstr ""

#: ..\python_docs\developer_guide.py:289
msgid "executed. The implementation of this event is not important for the"
msgstr ""

#: ..\python_docs\developer_guide.py:290
msgid "purposes of this example. The most important part is the class itself."
msgstr ""

#: ..\python_docs\developer_guide.py:291
msgid "Events will be covered in greater detail later."
msgstr ""

#: ..\python_docs\developer_guide.py:292
msgid "As with other examples in this guide, remember to delete the created app"
msgstr ""

#: ..\python_docs\developer_guide.py:293
msgid "module when you are finished testing and then restart NVDA or reload"
msgstr ""

#: ..\python_docs\developer_guide.py:294 ..\python_docs\developer_guide.py:352
msgid "plugins, so that original functionality is restored."
msgstr ""

#: ..\python_docs\developer_guide.py:295
msgid "[]{#toc14}"
msgstr ""

#: ..\python_docs\developer_guide.py:296
msgid "### 3.5. Basics of a Global Plugin"
msgstr ""

#: ..\python_docs\developer_guide.py:297
msgid "Global Plugin files have a .py extension, and should have a short unique"
msgstr ""

#: ..\python_docs\developer_guide.py:298
msgid "name which identifies what they do."
msgstr ""

#: ..\python_docs\developer_guide.py:299
msgid "Global Plugin files must be placed in the globalPlugins subdirectory of"
msgstr ""

#: ..\python_docs\developer_guide.py:300
msgid "the user\\'s NVDA user configuration directory. For more information on"
msgstr ""

#: ..\python_docs\developer_guide.py:301
msgid "where to find the user configuration directory, please see the NVDA user"
msgstr ""

#: ..\python_docs\developer_guide.py:303
msgid "Global Plugins must define a class called GlobalPlugin, which inherits"
msgstr ""

#: ..\python_docs\developer_guide.py:304
msgid "from globalPluginHandler.GlobalPlugin. This class can then define event"
msgstr ""

#: ..\python_docs\developer_guide.py:305
msgid "and script methods, gesture bindings and other code. This will all be"
msgstr ""

#: ..\python_docs\developer_guide.py:306
msgid "covered in depth later."
msgstr ""

#: ..\python_docs\developer_guide.py:307
msgid "NVDA loads all global plugins as soon as it starts, and unloads them on"
msgstr ""

#: ..\python_docs\developer_guide.py:308
msgid "exit."
msgstr ""

#: ..\python_docs\developer_guide.py:309
msgid "[]{#toc15}"
msgstr ""

#: ..\python_docs\developer_guide.py:310
msgid "### 3.6. Example 2: a Global Plugin Providing a Script to Announce the NVDA Version"
msgstr ""

#: ..\python_docs\developer_guide.py:311
msgid "The following example Global Plugin Allows you to press NVDA+shift+v"
msgstr ""

#: ..\python_docs\developer_guide.py:312
msgid "while anywhere in the Operating System to find out NVDA\\'s version. This"
msgstr ""

#: ..\python_docs\developer_guide.py:313
msgid "example is only to show you the basic layout of a Global Plugin."
msgstr ""

#: ..\python_docs\developer_guide.py:315
msgid "markers into a new text file with a name of example2.py, which should be"
msgstr ""

#: ..\python_docs\developer_guide.py:316 ..\python_docs\developer_guide.py:498
msgid "saved in the globalPlugins subdirectory. Be very careful to keep all"
msgstr ""

#: ..\python_docs\developer_guide.py:317 ..\python_docs\developer_guide.py:499
msgid "tabs and spaces intact."
msgstr ""

#: ..\python_docs\developer_guide.py:318 ..\python_docs\developer_guide.py:500
msgid "Once saved in the right place, either restart NVDA or choose Reload"
msgstr ""

#: ..\python_docs\developer_guide.py:320
msgid "From anywhere, you can now press NVDA+shift+v to have NVDA\\'s version"
msgstr ""

#: ..\python_docs\developer_guide.py:321
msgid "spoken and brailled."
msgstr ""

#: ..\python_docs\developer_guide.py:323
msgid "    # Version announcement plugin for NVDA"
msgstr ""

#: ..\python_docs\developer_guide.py:324
msgid "    # Developer guide example 2"
msgstr ""

#: ..\python_docs\developer_guide.py:325 ..\python_docs\developer_guide.py:505
msgid "    import globalPluginHandler"
msgstr ""

#: ..\python_docs\developer_guide.py:326 ..\python_docs\developer_guide.py:506
#: ..\python_docs\developer_guide.py:647
msgid "    import ui"
msgstr ""

#: ..\python_docs\developer_guide.py:327
msgid "    import versionInfo"
msgstr ""

#: ..\python_docs\developer_guide.py:328 ..\python_docs\developer_guide.py:508
msgid "    class GlobalPlugin(globalPluginHandler.GlobalPlugin):"
msgstr ""

#: ..\python_docs\developer_guide.py:329
msgid "        def script_announceNVDAVersion(self, gesture):"
msgstr ""

#: ..\python_docs\developer_guide.py:330
msgid "            ui.message(versionInfo.version)"
msgstr ""

#: ..\python_docs\developer_guide.py:331
msgid "        __gestures={"
msgstr ""

#: ..\python_docs\developer_guide.py:332
msgid "            \"kb:NVDA+shift+v\": \"announceNVDAVersion\","
msgstr ""

#: ..\python_docs\developer_guide.py:333 ..\python_docs\developer_guide.py:522
#: ..\python_docs\developer_guide.py:657
msgid "        }"
msgstr ""

#: ..\python_docs\developer_guide.py:335
msgid "This Global Plugin file starts with two comment lines, which describe"
msgstr ""

#: ..\python_docs\developer_guide.py:336
msgid "what the file is for."
msgstr ""

#: ..\python_docs\developer_guide.py:337
msgid "It then imports the globalPluginHandler module, so that the Global"
msgstr ""

#: ..\python_docs\developer_guide.py:338
msgid "Plugin has access to the base GlobalPlugin class."
msgstr ""

#: ..\python_docs\developer_guide.py:339
msgid "It also imports a few other modules, namely ui and versionInfo, which"
msgstr ""

#: ..\python_docs\developer_guide.py:340
msgid "this specific plugin needs in order for it to perform the necessary"
msgstr ""

#: ..\python_docs\developer_guide.py:341
msgid "actions to announce the version."
msgstr ""

#: ..\python_docs\developer_guide.py:342
msgid "Next, it defines a class called GlobalPlugin, which is inherited from"
msgstr ""

#: ..\python_docs\developer_guide.py:343
msgid "globalPluginHandler.GlobalPlugin."
msgstr ""

#: ..\python_docs\developer_guide.py:345
msgid "bindings. In this example, it defines a script method that performs the"
msgstr ""

#: ..\python_docs\developer_guide.py:346
msgid "version announcement, and provides a binding from NVDA+shift+v to this"
msgstr ""

#: ..\python_docs\developer_guide.py:347
msgid "script. However, the details of the script and its binding are not"
msgstr ""

#: ..\python_docs\developer_guide.py:348
msgid "important for the purposes of this example. The most important part is"
msgstr ""

#: ..\python_docs\developer_guide.py:349
msgid "the class itself."
msgstr ""

#: ..\python_docs\developer_guide.py:350
msgid "As with other examples in this guide, remember to delete the created"
msgstr ""

#: ..\python_docs\developer_guide.py:351
msgid "Global Plugin when finished testing and then restart NVDA or reload"
msgstr ""

#: ..\python_docs\developer_guide.py:353
msgid "[]{#toc16}"
msgstr ""

#: ..\python_docs\developer_guide.py:354
msgid "### 3.7. NVDA Objects"
msgstr ""

#: ..\python_docs\developer_guide.py:355
msgid "NVDA represents controls and other GUI elements as NVDA Objects. These"
msgstr ""

#: ..\python_docs\developer_guide.py:356
msgid "NVDA Objects contain standardised properties, such as name, role, value,"
msgstr ""

#: ..\python_docs\developer_guide.py:357
msgid "states and description, which allow other parts of NVDA to query or"
msgstr ""

#: ..\python_docs\developer_guide.py:358
msgid "present information about a control in a generalised way. For example,"
msgstr ""

#: ..\python_docs\developer_guide.py:359
msgid "the OK button in a dialog would be represented as an NVDA Object with a"
msgstr ""

#: ..\python_docs\developer_guide.py:360
msgid "name of \\\"OK\\\" and a role of button. Similarly, a checkbox with a label"
msgstr ""

#: ..\python_docs\developer_guide.py:361
msgid "of \\\"I agree\\\" would have a name of \\\"I agree\\\", a role of checkbox, and"
msgstr ""

#: ..\python_docs\developer_guide.py:362
msgid "if currently checked, a state of checked."
msgstr ""

#: ..\python_docs\developer_guide.py:363
msgid "As there are many different GUI Toolkits and platform and accessibility"
msgstr ""

#: ..\python_docs\developer_guide.py:364
msgid "APIs, NVDA Objects abstract these differences into a standard form that"
msgstr ""

#: ..\python_docs\developer_guide.py:365
msgid "NVDA can use, regardless of the toolkit or API a particular control is"
msgstr ""

#: ..\python_docs\developer_guide.py:366
msgid "made with. For example, the Ok button just discussed could be a widget"
msgstr ""

#: ..\python_docs\developer_guide.py:367
msgid "in a Java application, an MSAA object, an IAccessible2 object or a UI"
msgstr ""

#: ..\python_docs\developer_guide.py:368
msgid "Automation element."
msgstr ""

#: ..\python_docs\developer_guide.py:369
msgid "NVDA Objects have many properties. Some of the most useful are:"
msgstr ""

#: ..\python_docs\developer_guide.py:370
msgid "-   name: the label of the control."
msgstr ""

#: ..\python_docs\developer_guide.py:371
msgid "-   role: one of the ROLE\\_\\* constants from NVDA\\'s controlTypes"
msgstr ""

#: ..\python_docs\developer_guide.py:372
msgid "    module. Button, dialog, editableText, window and checkbox are"
msgstr ""

#: ..\python_docs\developer_guide.py:373
msgid "    examples of roles."
msgstr ""

#: ..\python_docs\developer_guide.py:374
msgid "-   states: a set of 0 or more of the STATE\\_\\* constants from NVDA\\'s"
msgstr ""

#: ..\python_docs\developer_guide.py:375
msgid "    controlTypes module. Focusable, focused, selected, selectable,"
msgstr ""

#: ..\python_docs\developer_guide.py:376
msgid "    expanded, collapsed and checked are some examples of states."
msgstr ""

#: ..\python_docs\developer_guide.py:377
msgid "-   value: the value of the control; e.g. the percentage of a scroll bar"
msgstr ""

#: ..\python_docs\developer_guide.py:378
msgid "    or the current setting of a combo box."
msgstr ""

#: ..\python_docs\developer_guide.py:379
msgid "-   description: a sentence or two describing what the control does"
msgstr ""

#: ..\python_docs\developer_guide.py:380
msgid "    (usually the same as its tooltip)."
msgstr ""

#: ..\python_docs\developer_guide.py:381
msgid "-   location: the object\\'s left, top, width and height positions in"
msgstr ""

#: ..\python_docs\developer_guide.py:382
msgid "    screen coordinates."
msgstr ""

#: ..\python_docs\developer_guide.py:383
msgid "-   parent: this object\\'s parent object. For example, a list item"
msgstr ""

#: ..\python_docs\developer_guide.py:384
msgid "    object\\'s parent would be the list containing it."
msgstr ""

#: ..\python_docs\developer_guide.py:385
msgid "-   next: the object directly after this one on the same level in"
msgstr ""

#: ..\python_docs\developer_guide.py:386
msgid "    logical order. For example, a menu item NVDA Object\\'s next object"
msgstr ""

#: ..\python_docs\developer_guide.py:387
msgid "    is most likely another menu item within the same menu."
msgstr ""

#: ..\python_docs\developer_guide.py:388
msgid "-   previous: like next but in reverse."
msgstr ""

#: ..\python_docs\developer_guide.py:389
msgid "-   firstChild: the first direct child object of this object. For"
msgstr ""

#: ..\python_docs\developer_guide.py:390
msgid "    example, a list\\'s first child would be the first list item."
msgstr ""

#: ..\python_docs\developer_guide.py:391
msgid "-   lastChild: the last direct child of this object."
msgstr ""

#: ..\python_docs\developer_guide.py:392
msgid "-   children: a list of all the direct children of this object; e.g. all"
msgstr ""

#: ..\python_docs\developer_guide.py:393
msgid "    the menu items in a menu."
msgstr ""

#: ..\python_docs\developer_guide.py:394
msgid "There are also a few simplified navigation properties such as"
msgstr ""

#: ..\python_docs\developer_guide.py:395
msgid "simpleParent, simpleNext, simpleFirstChild and simpleLastChild. These"
msgstr ""

#: ..\python_docs\developer_guide.py:396
msgid "are like their respective navigation properties described above, but"
msgstr ""

#: ..\python_docs\developer_guide.py:397
msgid "NVDA filters out unuseful objects. These properties are used when"
msgstr ""

#: ..\python_docs\developer_guide.py:398
msgid "NVDA\\'s simple review mode is turned on, which is the default. These"
msgstr ""

#: ..\python_docs\developer_guide.py:399
msgid "simple properties may be easier to use, but the real navigation"
msgstr ""

#: ..\python_docs\developer_guide.py:400
msgid "properties more closely reflect the underlying Operating System"
msgstr ""

#: ..\python_docs\developer_guide.py:401
msgid "structure. Also, these may change in future versions of NVDA as"
msgstr ""

#: ..\python_docs\developer_guide.py:402
msgid "improvements are made to simple review, so they should generally be"
msgstr ""

#: ..\python_docs\developer_guide.py:403
msgid "avoided when programmatically locating specific objects."
msgstr ""

#: ..\python_docs\developer_guide.py:404
msgid "When developing plugins, most of the time, it is not important what"
msgstr ""

#: ..\python_docs\developer_guide.py:405
msgid "toolkit or API backs an NVDA Object, as the plugin will usually only"
msgstr ""

#: ..\python_docs\developer_guide.py:406
msgid "access standard properties such as name, role and value. However, as"
msgstr ""

#: ..\python_docs\developer_guide.py:407
msgid "plugins become more advanced, it is certainly possible to delve deeper"
msgstr ""

#: ..\python_docs\developer_guide.py:408
msgid "into NVDA Objects to find out toolkit or API specific information if"
msgstr ""

#: ..\python_docs\developer_guide.py:409
msgid "required."
msgstr ""

#: ..\python_docs\developer_guide.py:410
msgid "Plugins make use of NVDA Objects in three particular ways:"
msgstr ""

#: ..\python_docs\developer_guide.py:411
msgid "-   Most events that plugins receive take an argument which is the NVDA"
msgstr ""

#: ..\python_docs\developer_guide.py:412
msgid "    Object on which the event occurred. For example, event\\_gainFocus"
msgstr ""

#: ..\python_docs\developer_guide.py:413
msgid "    takes the NVDA Object that represents the control gaining focus."
msgstr ""

#: ..\python_docs\developer_guide.py:414
msgid "-   Scripts, events or other code may fetch objects of interest such as"
msgstr ""

#: ..\python_docs\developer_guide.py:415
msgid "    the NVDA Object with focus, NVDA\\'s current navigator object, or"
msgstr ""

#: ..\python_docs\developer_guide.py:416
msgid "    perhaps the Desktop NVDA Object. The code may then retreave"
msgstr ""

#: ..\python_docs\developer_guide.py:417
msgid "    information from that object or perhaps even retreave another object"
msgstr ""

#: ..\python_docs\developer_guide.py:418
msgid "    related to it (e.g. its parent, first child, etc.)."
msgstr ""

#: ..\python_docs\developer_guide.py:419
msgid "-   the Plugin may define its own custom NVDA Object classes which will"
msgstr ""

#: ..\python_docs\developer_guide.py:420
msgid "    be used to wrap a specific control to give it extra functionality,"
msgstr ""

#: ..\python_docs\developer_guide.py:421
msgid "    mutate its properties, etc."
msgstr ""

#: ..\python_docs\developer_guide.py:422
msgid "Just like App Modules and Global Plugins, NVDA Objects can also define"
msgstr ""

#: ..\python_docs\developer_guide.py:423
msgid "events, scripts and gesture bindings."
msgstr ""

#: ..\python_docs\developer_guide.py:424
msgid "[]{#toc17}"
msgstr ""

#: ..\python_docs\developer_guide.py:425
msgid "### 3.8. Scripts and Gesture Bindings"
msgstr ""

#: ..\python_docs\developer_guide.py:426
msgid "App Modules, Global Plugins and NVDA Objects can define special methods"
msgstr ""

#: ..\python_docs\developer_guide.py:427
msgid "which can be bound to a particular piece of input such as a key press."
msgstr ""

#: ..\python_docs\developer_guide.py:428
msgid "NVDA refers to these methods as scripts."
msgstr ""

#: ..\python_docs\developer_guide.py:429
msgid "A script is a standard Python instance method with a name starting with"
msgstr ""

#: ..\python_docs\developer_guide.py:430
msgid "\\\"script\\_\\\"; e.g. \\\"script\\_sayDateTime\\\"."
msgstr ""

#: ..\python_docs\developer_guide.py:431
msgid "A script method takes two arguments:"
msgstr ""

#: ..\python_docs\developer_guide.py:432
msgid "-   self: a reference to the App Module, Global Plugin or NVDA Object"
msgstr ""

#: ..\python_docs\developer_guide.py:433
msgid "    instance the script was called on."
msgstr ""

#: ..\python_docs\developer_guide.py:434
msgid "-   gesture: an Input Gesture object, which represents the input that"
msgstr ""

#: ..\python_docs\developer_guide.py:435
msgid "    caused the script to run."
msgstr ""

#: ..\python_docs\developer_guide.py:436
msgid "As well as the actual script method, some form of gesture binding must"
msgstr ""

#: ..\python_docs\developer_guide.py:437
msgid "be defined, so that NVDA knows what input should execute the script."
msgstr ""

#: ..\python_docs\developer_guide.py:438
msgid "To bind a gesture to a script, a special \\\"\\_\\_gestures\\\" Python"
msgstr ""

#: ..\python_docs\developer_guide.py:439
msgid "dictionary can be defined as a class variable on the App Module, Global"
msgstr ""

#: ..\python_docs\developer_guide.py:440
msgid "Plugin or NVDA Object. These dictionaries should contain gesture"
msgstr ""

#: ..\python_docs\developer_guide.py:441
msgid "identifier strings pointing to the name of the requested script, without"
msgstr ""

#: ..\python_docs\developer_guide.py:442
msgid "the \\\"script\\_\\\" prefix."
msgstr ""

#: ..\python_docs\developer_guide.py:443
msgid "There are more advanced ways of binding gestures in a more dynamic"
msgstr ""

#: ..\python_docs\developer_guide.py:444
msgid "fashion, though the \\_\\_gestures dictionary is the simplest."
msgstr ""

#: ..\python_docs\developer_guide.py:445
msgid "A gesture identifier string is a simple string representation of a piece"
msgstr ""

#: ..\python_docs\developer_guide.py:446
msgid "of input. It consists of a two leter character code denoting the source"
msgstr ""

#: ..\python_docs\developer_guide.py:447
msgid "of the input, an optional device in brackets, a colon (:) and one or"
msgstr ""

#: ..\python_docs\developer_guide.py:448
msgid "more names separated by a plus (+) denoting the actual keys or input"
msgstr ""

#: ..\python_docs\developer_guide.py:449
msgid "values."
msgstr ""

#: ..\python_docs\developer_guide.py:450
msgid "Some examples of gesture string identifiers are:"
msgstr ""

#: ..\python_docs\developer_guide.py:451
msgid "-   \\\"kb:NVDA+shift+v\\\""
msgstr ""

#: ..\python_docs\developer_guide.py:452
msgid "-   \\\"br(freedomScientific):leftWizWheelUp\\\""
msgstr ""

#: ..\python_docs\developer_guide.py:453
msgid "-   \\\"kb(laptop):NVDA+t\\\""
msgstr ""

#: ..\python_docs\developer_guide.py:454
msgid "Currently, the input sources in NVDA are:"
msgstr ""

#: ..\python_docs\developer_guide.py:455
msgid "-   kb: system keyboard input"
msgstr ""

#: ..\python_docs\developer_guide.py:456
msgid "-   br: braille display controls"
msgstr ""

#: ..\python_docs\developer_guide.py:457
msgid "-   ts: touch screen"
msgstr ""

#: ..\python_docs\developer_guide.py:458
msgid "-   bk: braille keyboard input"
msgstr ""

#: ..\python_docs\developer_guide.py:459
msgid "When NVDA receives input, it looks for a matching gesture binding in a"
msgstr ""

#: ..\python_docs\developer_guide.py:460
msgid "particular order. Once a gesture binding is found, the script is"
msgstr ""

#: ..\python_docs\developer_guide.py:461
msgid "executed and no further bindings are used, nore is that particular"
msgstr ""

#: ..\python_docs\developer_guide.py:462
msgid "gesture passed on automatically to the Operating System."
msgstr ""

#: ..\python_docs\developer_guide.py:463
msgid "The order for gesture binding lookup is:"
msgstr ""

#: ..\python_docs\developer_guide.py:464 ..\python_docs\developer_guide.py:536
msgid "-   Loaded Global Plugins"
msgstr ""

#: ..\python_docs\developer_guide.py:465
msgid "-   App Module of the active application"
msgstr ""

#: ..\python_docs\developer_guide.py:466
msgid "-   Tree Interceptor of the NVDA Object with focus if any; e.g. a"
msgstr ""

#: ..\python_docs\developer_guide.py:467
msgid "    virtualBuffer"
msgstr ""

#: ..\python_docs\developer_guide.py:468
msgid "-   NVDA Object with focus"
msgstr ""

#: ..\python_docs\developer_guide.py:469
msgid "-   Global Commands (built in commands like quitting NVDA, object"
msgstr ""

#: ..\python_docs\developer_guide.py:470
msgid "    navigation commands, etc.)"
msgstr ""

#: ..\python_docs\developer_guide.py:471
msgid "You should specify a description of the script in the function\\'s"
msgstr ""

#: ..\python_docs\developer_guide.py:472
msgid "docstring which describes the command for users. For example, this is"
msgstr ""

#: ..\python_docs\developer_guide.py:473
msgid "reported to users when in Input Help mode and shown in the Input"
msgstr ""

#: ..\python_docs\developer_guide.py:474
msgid "Gestures dialog. You specify the docstring by setting a"
msgstr ""

#: ..\python_docs\developer_guide.py:475
msgid "\\\"[doc]{.underline}\\\" attribute on the script function. The script will"
msgstr ""

#: ..\python_docs\developer_guide.py:476
msgid "not appear in the Input Gestures dialog unless this is specified."
msgstr ""

#: ..\python_docs\developer_guide.py:477
msgid "You can also specify a category for a script so that it can be grouped"
msgstr ""

#: ..\python_docs\developer_guide.py:478
msgid "with other similar scripts. For example, a script in a global plugin"
msgstr ""

#: ..\python_docs\developer_guide.py:479
msgid "which adds browse mode quick navigation keys may be categorized under"
msgstr ""

#: ..\python_docs\developer_guide.py:480
msgid "the \\\"Browse mode\\\" category. For individual scripts, this is done by"
msgstr ""

#: ..\python_docs\developer_guide.py:481
msgid "setting a \\\"category\\\" attribute on the script function to a string"
msgstr ""

#: ..\python_docs\developer_guide.py:482
msgid "containing the name of the category. You can also set the"
msgstr ""

#: ..\python_docs\developer_guide.py:483
msgid "\\\"scriptCategory\\\" attribute on the plugin class, which will be used for"
msgstr ""

#: ..\python_docs\developer_guide.py:484
msgid "scripts which do not specify a category. There are constants for common"
msgstr ""

#: ..\python_docs\developer_guide.py:485
msgid "categories prefixed with SCRCAT\\_ in the inputCore and globalCommands"
msgstr ""

#: ..\python_docs\developer_guide.py:486
msgid "modules. The script will be listed under the specified category in the"
msgstr ""

#: ..\python_docs\developer_guide.py:487
msgid "Input Gestures dialog. If no category is specified, the script will be"
msgstr ""

#: ..\python_docs\developer_guide.py:488
msgid "categorized under \\\"Miscellaneous\\\"."
msgstr ""

#: ..\python_docs\developer_guide.py:489
msgid "[]{#toc18}"
msgstr ""

#: ..\python_docs\developer_guide.py:490
msgid "### 3.9. Example 3: A Global Plugin to Find out Window Class and Control ID"
msgstr ""

#: ..\python_docs\developer_guide.py:491
msgid "The following Global Plugin allows you to press NVDA+leftArrow to have"
msgstr ""

#: ..\python_docs\developer_guide.py:492
msgid "the window class of the current focus announced, and NVDA+rightArrow to"
msgstr ""

#: ..\python_docs\developer_guide.py:493
msgid "have the window control ID of the current focus announced. This example"
msgstr ""

#: ..\python_docs\developer_guide.py:494
msgid "shows you how to define one or more scripts and gesture bindings on a"
msgstr ""

#: ..\python_docs\developer_guide.py:495
msgid "class such as an App Module, Global Plugin or NVDA Object."
msgstr ""

#: ..\python_docs\developer_guide.py:497
msgid "markers into a new text file with a name of example3.py, which should be"
msgstr ""

#: ..\python_docs\developer_guide.py:503
msgid "    #Window utility scripts for NVDA"
msgstr ""

#: ..\python_docs\developer_guide.py:504
msgid "    #Developer guide example 3"
msgstr ""

#: ..\python_docs\developer_guide.py:507
msgid "    import api"
msgstr ""

#: ..\python_docs\developer_guide.py:509
msgid "        def script_announceWindowClassName(self, gesture):"
msgstr ""

#: ..\python_docs\developer_guide.py:510 ..\python_docs\developer_guide.py:515
msgid "            focusObj = api.getFocusObject()"
msgstr ""

#: ..\python_docs\developer_guide.py:511 ..\python_docs\developer_guide.py:516
msgid "            name = focusObj.name"
msgstr ""

#: ..\python_docs\developer_guide.py:512
msgid "            windowClassName = focusObj.windowClassName"
msgstr ""

#: ..\python_docs\developer_guide.py:513
msgid "            ui.message(\"class for %s window: %s\" % (name, windowClassName))"
msgstr ""

#: ..\python_docs\developer_guide.py:514
msgid "        def script_announceWindowControlID(self, gesture):"
msgstr ""

#: ..\python_docs\developer_guide.py:517
msgid "            windowControlID = focusObj.windowControlID"
msgstr ""

#: ..\python_docs\developer_guide.py:518
msgid "            ui.message(\"Control ID for %s window: %d\" % (name, windowControlID))"
msgstr ""

#: ..\python_docs\developer_guide.py:519 ..\python_docs\developer_guide.py:655
msgid "        __gestures = {"
msgstr ""

#: ..\python_docs\developer_guide.py:520
msgid "            \"kb:NVDA+leftArrow\": \"announceWindowClassName\","
msgstr ""

#: ..\python_docs\developer_guide.py:521
msgid "            \"kb:NVDA+rightArrow\": \"announceWindowControlID\","
msgstr ""

#: ..\python_docs\developer_guide.py:524
msgid "[]{#toc19}"
msgstr ""

#: ..\python_docs\developer_guide.py:525
msgid "### 3.10. Events"
msgstr ""

#: ..\python_docs\developer_guide.py:526
msgid "When NVDA detects particular toolkit, API or Operating System events, it"
msgstr ""

#: ..\python_docs\developer_guide.py:527
msgid "abstracts these and fires its own internal events on plugins and NVDA"
msgstr ""

#: ..\python_docs\developer_guide.py:528
msgid "Objects."
msgstr ""

#: ..\python_docs\developer_guide.py:529
msgid "Although most events are related to a specific NVDA Object (e.g. name"
msgstr ""

#: ..\python_docs\developer_guide.py:530
msgid "change, gain focus, state change, etc.), these events can be handled at"
msgstr ""

#: ..\python_docs\developer_guide.py:531
msgid "various levels. When an event is handled, it is stopped from going"
msgstr ""

#: ..\python_docs\developer_guide.py:532
msgid "further down the chain. However, code inside the event can choose to"
msgstr ""

#: ..\python_docs\developer_guide.py:533
msgid "propagate it further if needed."
msgstr ""

#: ..\python_docs\developer_guide.py:534
msgid "The order of levels through which the event passes until an event method"
msgstr ""

#: ..\python_docs\developer_guide.py:535
msgid "is found is:"
msgstr ""

#: ..\python_docs\developer_guide.py:537
msgid "-   The App Module associated with the NVDA Object on which the event"
msgstr ""

#: ..\python_docs\developer_guide.py:538
msgid "    was fired"
msgstr ""

#: ..\python_docs\developer_guide.py:539
msgid "-   The Tree Interceptor (if any) associated with the NVDAObject on"
msgstr ""

#: ..\python_docs\developer_guide.py:540
msgid "    which the event was fired"
msgstr ""

#: ..\python_docs\developer_guide.py:541
msgid "-   the NVDAObject itself."
msgstr ""

#: ..\python_docs\developer_guide.py:542
msgid "Events are Python instance methods, with a name starting with"
msgstr ""

#: ..\python_docs\developer_guide.py:543
msgid "\\\"event\\_\\\" followed by the actual name of the event (e.g. gainFocus)."
msgstr ""

#: ..\python_docs\developer_guide.py:544
msgid "These event methods take slightly different arguments depending at what"
msgstr ""

#: ..\python_docs\developer_guide.py:545
msgid "level they are defined."
msgstr ""

#: ..\python_docs\developer_guide.py:546
msgid "If an event for an NVDA Object is defined on an NVDA Object itself, the"
msgstr ""

#: ..\python_docs\developer_guide.py:547
msgid "method only takes one mandatory argument which is the \\'self\\' argument;"
msgstr ""

#: ..\python_docs\developer_guide.py:548
msgid "i.e. the NVDA Object instance). Some events may take extra arguments,"
msgstr ""

#: ..\python_docs\developer_guide.py:549
msgid "though this is quite rare."
msgstr ""

#: ..\python_docs\developer_guide.py:550
msgid "If an event for an NVDA Object is defined on a Global Plugin, App Module"
msgstr ""

#: ..\python_docs\developer_guide.py:551
msgid "or Tree Interceptor, the event takes the following arguments:"
msgstr ""

#: ..\python_docs\developer_guide.py:552
msgid "-   self: the instance of the Global Plugin, App Module or Tree"
msgstr ""

#: ..\python_docs\developer_guide.py:553
msgid "    Interceptor"
msgstr ""

#: ..\python_docs\developer_guide.py:554
msgid "-   obj: the NVDA Object on which the event was fired"
msgstr ""

#: ..\python_docs\developer_guide.py:555
msgid "-   nextHandler: a function that when called will propagate the event"
msgstr ""

#: ..\python_docs\developer_guide.py:556
msgid "    further down the chain."
msgstr ""

#: ..\python_docs\developer_guide.py:557
msgid "Some common NVDA Object events are:"
msgstr ""

#: ..\python_docs\developer_guide.py:558
msgid "-   foreground: this NVDA Object has become the new foreground object;"
msgstr ""

#: ..\python_docs\developer_guide.py:559
msgid "    i.e. active top-level object"
msgstr ""

#: ..\python_docs\developer_guide.py:560
msgid "-   gainFocus"
msgstr ""

#: ..\python_docs\developer_guide.py:561
msgid "-   focusEntered: Focus has moved inside this object; i.e. it is an"
msgstr ""

#: ..\python_docs\developer_guide.py:562
msgid "    ancestor of the focus object"
msgstr ""

#: ..\python_docs\developer_guide.py:563
msgid "-   loseFocus"
msgstr ""

#: ..\python_docs\developer_guide.py:564
msgid "-   nameChange"
msgstr ""

#: ..\python_docs\developer_guide.py:565
msgid "-   valueChange"
msgstr ""

#: ..\python_docs\developer_guide.py:566
msgid "-   stateChange"
msgstr ""

#: ..\python_docs\developer_guide.py:567
msgid "-   caret: when the caret (insertion point) within this NVDA Object"
msgstr ""

#: ..\python_docs\developer_guide.py:568
msgid "    moves"
msgstr ""

#: ..\python_docs\developer_guide.py:569
msgid "-   locationChange: physical screen location changes"
msgstr ""

#: ..\python_docs\developer_guide.py:570
msgid "There are many other events, though those listed above are usually the"
msgstr ""

#: ..\python_docs\developer_guide.py:571
msgid "most useful."
msgstr ""

#: ..\python_docs\developer_guide.py:572
msgid "For an example of an event handled by an App Module, please refer to"
msgstr ""

#: ..\python_docs\developer_guide.py:573
msgid "[example 1](#Example1) (focus beeps in notepad)."
msgstr ""

#: ..\python_docs\developer_guide.py:574
msgid "[]{#toc20}"
msgstr ""

#: ..\python_docs\developer_guide.py:575
msgid "### 3.11. the App Module SleepMode variable"
msgstr ""

#: ..\python_docs\developer_guide.py:576
msgid "App Modules have one very useful property called \\\"sleepMode\\\", which if"
msgstr ""

#: ..\python_docs\developer_guide.py:577
msgid "set to true almost completely disables NVDA within that application."
msgstr ""

#: ..\python_docs\developer_guide.py:578
msgid "Sleep Mode is very useful for self voicing applications that have their"
msgstr ""

#: ..\python_docs\developer_guide.py:579
msgid "own screen reading functionality, or perhaps even some games that need"
msgstr ""

#: ..\python_docs\developer_guide.py:580
msgid "full use of the keyboard."
msgstr ""

#: ..\python_docs\developer_guide.py:581
msgid "Although sleep mode can be toggled on and off by the user with the key"
msgstr ""

#: ..\python_docs\developer_guide.py:582
msgid "command NVDA+shift+s, a developer can choose to have sleep mode enabled"
msgstr ""

#: ..\python_docs\developer_guide.py:583
msgid "by default for an application. This is done by providing an App Module"
msgstr ""

#: ..\python_docs\developer_guide.py:584
msgid "for that application which simply sets sleepMode to True in the"
msgstr ""

#: ..\python_docs\developer_guide.py:585
msgid "AppModule class."
msgstr ""

#: ..\python_docs\developer_guide.py:586
msgid "[]{#toc21}"
msgstr ""

#: ..\python_docs\developer_guide.py:587
msgid "### 3.12. Example 4: A Sleep Mode App Module"
msgstr ""

#: ..\python_docs\developer_guide.py:588 ..\python_docs\developer_guide.py:641
#: ..\python_docs\developer_guide.py:675
msgid "The following code can be copied and pasted in to a text file, then"
msgstr ""

#: ..\python_docs\developer_guide.py:589
msgid "saved in the appModules directory with the name of the application you"
msgstr ""

#: ..\python_docs\developer_guide.py:590
msgid "wish to enable sleep mode for. As always, the file must have a .py"
msgstr ""

#: ..\python_docs\developer_guide.py:591
msgid "extension."
msgstr ""

#: ..\python_docs\developer_guide.py:595
msgid "        sleepMode = True"
msgstr ""

#: ..\python_docs\developer_guide.py:597
msgid "[]{#toc22}"
msgstr ""

#: ..\python_docs\developer_guide.py:598
msgid "### 3.13. Providing Custom NVDA Object Classes"
msgstr ""

#: ..\python_docs\developer_guide.py:599
msgid "Providing custom NVDA Object classes is probably the most powerful and"
msgstr ""

#: ..\python_docs\developer_guide.py:600
msgid "useful way to improve the experience of an application in an NVDA"
msgstr ""

#: ..\python_docs\developer_guide.py:601
msgid "plugin. This method allows you to place all the needed logic for a"
msgstr ""

#: ..\python_docs\developer_guide.py:602
msgid "particular control altogether in one NVDA Object class for that control,"
msgstr ""

#: ..\python_docs\developer_guide.py:603
msgid "rather than scattering code for many controls across a plugin\\'s events."
msgstr ""

#: ..\python_docs\developer_guide.py:604
msgid "There are two steps to providing a custom NVDA Object class:"
msgstr ""

#: ..\python_docs\developer_guide.py:605
msgid "-   Define the NVDA Object class and its events, scripts, gesture"
msgstr ""

#: ..\python_docs\developer_guide.py:606
msgid "    bindings and overridden properties."
msgstr ""

#: ..\python_docs\developer_guide.py:607
msgid "-   Tell NVDA to use this NVDA Object class in specific situations by"
msgstr ""

#: ..\python_docs\developer_guide.py:608
msgid "    handling it in the plugin\\'s chooseNVDAObjectOverlayClasses method."
msgstr ""

#: ..\python_docs\developer_guide.py:609
msgid "When defining a custom NVDAObject class, you have many NVDAObject base"
msgstr ""

#: ..\python_docs\developer_guide.py:610
msgid "classes to choose from. These base classes contain the base support for"
msgstr ""

#: ..\python_docs\developer_guide.py:611
msgid "the particular accessibility or OS API underlying the control, such as"
msgstr ""

#: ..\python_docs\developer_guide.py:612
msgid "win32, MSAA or Java access Bridge. You should usually inherit your"
msgstr ""

#: ..\python_docs\developer_guide.py:613
msgid "custom NVDAObject class from the highest base class you need in order to"
msgstr ""

#: ..\python_docs\developer_guide.py:614
msgid "choose your class in the first place. For example, if you choose to use"
msgstr ""

#: ..\python_docs\developer_guide.py:615
msgid "your custom NVDAObject class when the window class name is \\\"Edit\\\" and"
msgstr ""

#: ..\python_docs\developer_guide.py:616
msgid "the window control ID is 15, you should probably inherit from"
msgstr ""

#: ..\python_docs\developer_guide.py:617
msgid "NVDAObjects.window.Window, as clearly you are aware that this is a"
msgstr ""

#: ..\python_docs\developer_guide.py:618
msgid "Window object. Similarly, if you match on MSAA\\'s accRole property, you"
msgstr ""

#: ..\python_docs\developer_guide.py:619
msgid "would probably need to inherit from NVDAObjects.IAccessible.IAccessible."
msgstr ""

#: ..\python_docs\developer_guide.py:620
msgid "You should also consider what properties you are going to override on"
msgstr ""

#: ..\python_docs\developer_guide.py:621
msgid "the custom NVDA Object. For instance, if you are going to override an"
msgstr ""

#: ..\python_docs\developer_guide.py:622
msgid "IAccessible specific property, such as shouldAllowIAccessibleFocusEvent,"
msgstr ""

#: ..\python_docs\developer_guide.py:623
msgid "then you need to inherit from NVDAObjects.IAccessible.IAccessible."
msgstr ""

#: ..\python_docs\developer_guide.py:624
msgid "the chooseNVDAObjectOverlayClasses method can be implemented on app"
msgstr ""

#: ..\python_docs\developer_guide.py:625
msgid "modules or global plugin classes. It takes 3 arguments:"
msgstr ""

#: ..\python_docs\developer_guide.py:626
msgid "1.  self: the app module or global plugin instance."
msgstr ""

#: ..\python_docs\developer_guide.py:627
msgid "2.  obj: the NVDAObject for which classes are being chosen."
msgstr ""

#: ..\python_docs\developer_guide.py:628
msgid "3.  clsList: a Python list of NVDAObject classes that will be used for"
msgstr ""

#: ..\python_docs\developer_guide.py:629
msgid "    obj."
msgstr ""

#: ..\python_docs\developer_guide.py:630
msgid "Inside this method, you should decide which custom NVDA Object class(es)"
msgstr ""

#: ..\python_docs\developer_guide.py:631
msgid "(if any) this NVDA Object should use by checking its properties, etc. If"
msgstr ""

#: ..\python_docs\developer_guide.py:632
msgid "a custom class should be used, it must be inserted into the class list,"
msgstr ""

#: ..\python_docs\developer_guide.py:633
msgid "usually at the beginning. You can also remove classes chosen by NVDA"
msgstr ""

#: ..\python_docs\developer_guide.py:634
msgid "from the class list, although this is rarely required."
msgstr ""

#: ..\python_docs\developer_guide.py:635
msgid "[]{#toc23}"
msgstr ""

#: ..\python_docs\developer_guide.py:636
msgid "### 3.14. Example 5: Command to Retrieve the Length of Text in an Edit Field Using a Custom NVDA Object"
msgstr ""

#: ..\python_docs\developer_guide.py:637
msgid "This app module for notepad provides a command to report the number of"
msgstr ""

#: ..\python_docs\developer_guide.py:638
msgid "characters in edit fields. You can activate it using NVDA+l. Notice that"
msgstr ""

#: ..\python_docs\developer_guide.py:639
msgid "the command is specific to edit fields; i.e. it only works while you are"
msgstr ""

#: ..\python_docs\developer_guide.py:640
msgid "focused in an edit field, rather than anywhere in the application."
msgstr ""

#: ..\python_docs\developer_guide.py:642 ..\python_docs\developer_guide.py:676
msgid "saved in the appModules directory with the name of notepad.py."
msgstr ""

#: ..\python_docs\developer_guide.py:645
msgid "    from NVDAObjects.IAccessible import IAccessible"
msgstr ""

#: ..\python_docs\developer_guide.py:646
msgid "    import controlTypes"
msgstr ""

#: ..\python_docs\developer_guide.py:649
msgid "        def chooseNVDAObjectOverlayClasses(self, obj, clsList):"
msgstr ""

#: ..\python_docs\developer_guide.py:650
msgid "            if obj.windowClassName == \"Edit\" and obj.role == controlTypes.ROLE_EDITABLETEXT:"
msgstr ""

#: ..\python_docs\developer_guide.py:651
msgid "                clsList.insert(0, EnhancedEditField)"
msgstr ""

#: ..\python_docs\developer_guide.py:652
msgid "    class EnhancedEditField(IAccessible):"
msgstr ""

#: ..\python_docs\developer_guide.py:653
msgid "        def script_reportLength(self, gesture):"
msgstr ""

#: ..\python_docs\developer_guide.py:654
msgid "            ui.message(\"%d\" % len(self.value))"
msgstr ""

#: ..\python_docs\developer_guide.py:656
msgid "            \"kb:NVDA+l\": \"reportLength\","
msgstr ""

#: ..\python_docs\developer_guide.py:659
msgid "[]{#toc24}"
msgstr ""

#: ..\python_docs\developer_guide.py:660
msgid "### 3.15. Making Small Changes to an NVDA Object in App Modules"
msgstr ""

#: ..\python_docs\developer_guide.py:661
msgid "Sometimes, you may wish to make only small changes to an NVDA Object in"
msgstr ""

#: ..\python_docs\developer_guide.py:662
msgid "an application, such as overriding its name or role. In these cases, you"
msgstr ""

#: ..\python_docs\developer_guide.py:663
msgid "don\\'t need the full power of a custom NVDA Object class. To do this,"
msgstr ""

#: ..\python_docs\developer_guide.py:664
msgid "you can use the NVDAObject\\_init event available only on App Modules."
msgstr ""

#: ..\python_docs\developer_guide.py:665
msgid "The event\\_NVDAObject\\_init method takes two arguments:"
msgstr ""

#: ..\python_docs\developer_guide.py:666
msgid "1.  self: the AppModule instance."
msgstr ""

#: ..\python_docs\developer_guide.py:667
msgid "2.  obj: the NVDAObject being initialized."
msgstr ""

#: ..\python_docs\developer_guide.py:668
msgid "Inside this method, you can check whether this object is relevant and"
msgstr ""

#: ..\python_docs\developer_guide.py:669
msgid "then override properties accordingly."
msgstr ""

#: ..\python_docs\developer_guide.py:670
msgid "[]{#toc25}"
msgstr ""

#: ..\python_docs\developer_guide.py:671
msgid "### 3.16. Example 6: Labelling the Notepad Edit Field Using event\\_NVDAObject\\_init"
msgstr ""

#: ..\python_docs\developer_guide.py:672
msgid "This app module for notepad makes NVDA report Notepad\\'s main edit field"
msgstr ""

#: ..\python_docs\developer_guide.py:673
msgid "as having a name of \\\"content\\\". That is, when it receives focus, NVDA"
msgstr ""

#: ..\python_docs\developer_guide.py:674
msgid "will say \\\"Content edit\\\"."
msgstr ""

#: ..\python_docs\developer_guide.py:679
msgid "    from NVDAObjects.window import Window"
msgstr ""

#: ..\python_docs\developer_guide.py:681
msgid "        def event_NVDAObject_init(self, obj):"
msgstr ""

#: ..\python_docs\developer_guide.py:682
msgid "            if isinstance(obj, Window) and obj.windowClassName == \"Edit\" and obj.windowControlID == 15:"
msgstr ""

#: ..\python_docs\developer_guide.py:683
msgid "                obj.name = \"Content\""
msgstr ""

#: ..\python_docs\developer_guide.py:685
msgid "[]{#toc26}"
msgstr ""

#: ..\python_docs\developer_guide.py:686
msgid "4. Packaging Code as NVDA Add-ons"
msgstr ""

#: ..\python_docs\developer_guide.py:687
msgid "---------------------------------"
msgstr ""

#: ..\python_docs\developer_guide.py:688
msgid "To make it easy for users to share and install plugins and drivers, they"
msgstr ""

#: ..\python_docs\developer_guide.py:689
msgid "can be packaged in to a single NVDA add-on package which the user can"
msgstr ""

#: ..\python_docs\developer_guide.py:690
msgid "then install into a copy of NVDA via the Add-ons Manager found under"
msgstr ""

#: ..\python_docs\developer_guide.py:691
msgid "Tools in the NVDA menu. Add-on packages are only supported in NVDA"
msgstr ""

#: ..\python_docs\developer_guide.py:692
msgid "2012.2 and later. An add-on package is simply a standard zip archive"
msgstr ""

#: ..\python_docs\developer_guide.py:693
msgid "with the file extension of nvda-addon which contains a manifest file,"
msgstr ""

#: ..\python_docs\developer_guide.py:694
msgid "optional install/uninstall code and one or more directories containing"
msgstr ""

#: ..\python_docs\developer_guide.py:695
msgid "plugins and/or drivers."
msgstr ""

#: ..\python_docs\developer_guide.py:696
msgid "[]{#toc27}"
msgstr ""

#: ..\python_docs\developer_guide.py:697
msgid "### 4.1. Non-ASCII File Names in Zip Archives"
msgstr ""

#: ..\python_docs\developer_guide.py:698
msgid "If your add-on includes files which contain non-ASCII (non-English)"
msgstr ""

#: ..\python_docs\developer_guide.py:699
msgid "characters, you should create the zip archive such that it uses UTF-8"
msgstr ""

#: ..\python_docs\developer_guide.py:700
msgid "file names. This means that these files can be extracted properly on all"
msgstr ""

#: ..\python_docs\developer_guide.py:701
msgid "systems, regardless of the system\\'s configured language. Unfortunately,"
msgstr ""

#: ..\python_docs\developer_guide.py:702
msgid "many zip archivers do not support this, including Windows Explorer."
msgstr ""

#: ..\python_docs\developer_guide.py:703
msgid "Generally, it has to be explicitly enabled even in archivers that do"
msgstr ""

#: ..\python_docs\developer_guide.py:704
msgid "support it. [http://www.7-zip.org/](7-Zip) supports this, though it must"
msgstr ""

#: ..\python_docs\developer_guide.py:705
msgid "be enabled by specifying the \\\"cu=on\\\" method parameter."
msgstr ""

#: ..\python_docs\developer_guide.py:706
msgid "[]{#toc28}"
msgstr ""

#: ..\python_docs\developer_guide.py:707
msgid "### 4.2. Manifest Files"
msgstr ""

#: ..\python_docs\developer_guide.py:708
msgid "Each add-on package must contain a manifest file named manifest.ini."
msgstr ""

#: ..\python_docs\developer_guide.py:709
msgid "This must be a UTF-8 encoded text file. This manifest file contains key"
msgstr ""

#: ..\python_docs\developer_guide.py:710
msgid "= value pares declaring info such as the add-on\\'s name, version and"
msgstr ""

#: ..\python_docs\developer_guide.py:711
msgid "description."
msgstr ""

#: ..\python_docs\developer_guide.py:712
msgid "[]{#toc29}"
msgstr ""

#: ..\python_docs\developer_guide.py:713
msgid "#### 4.2.1. Available Fields"
msgstr ""

#: ..\python_docs\developer_guide.py:714
msgid "Although it is highly suggested that manifests contain all fields, the"
msgstr ""

#: ..\python_docs\developer_guide.py:715
msgid "fields marked as mandatory must be included. Otherwise, the add-on will"
msgstr ""

#: ..\python_docs\developer_guide.py:716
msgid "not install."
msgstr ""

#: ..\python_docs\developer_guide.py:717
msgid "-   name: A short unique name for the add-on. This is used to"
msgstr ""

#: ..\python_docs\developer_guide.py:718
msgid "    differentiate add-ons internally and is not shown to the user."
msgstr ""

#: ..\python_docs\developer_guide.py:719 ..\python_docs\developer_guide.py:724
msgid "    (Mandatory)"
msgstr ""

#: ..\python_docs\developer_guide.py:720
msgid "-   summary: The name of the add-on as shown to the user. (Mandatory)"
msgstr ""

#: ..\python_docs\developer_guide.py:721
msgid "-   version: The version of this add-on; e.g. 2.0. (Mandatory)"
msgstr ""

#: ..\python_docs\developer_guide.py:722
msgid "-   author: The author of this add-on, preferably in the form Full Name"
msgstr ""

#: ..\python_docs\developer_guide.py:723
msgid "    \\<email address\\>; e.g. Michael Curran \\<<mick@kulgan.net>\\>."
msgstr ""

#: ..\python_docs\developer_guide.py:725
msgid "-   description: A sentence or two describing what the add-on does."
msgstr ""

#: ..\python_docs\developer_guide.py:726
msgid "-   url: A URL where this add-on, further info and upgrades can be"
msgstr ""

#: ..\python_docs\developer_guide.py:727
msgid "    found."
msgstr ""

#: ..\python_docs\developer_guide.py:728
msgid "-   docFileName: The name of the main documentation file for this"
msgstr ""

#: ..\python_docs\developer_guide.py:729
msgid "    add-on; e.g. readme.html. See the [Add-on Documentation](#AddonDoc)"
msgstr ""

#: ..\python_docs\developer_guide.py:730
msgid "    section for more details."
msgstr ""

#: ..\python_docs\developer_guide.py:731
msgid "[]{#toc30}"
msgstr ""

#: ..\python_docs\developer_guide.py:732
msgid "#### 4.2.2. An Example Manifest File"
msgstr ""

#: ..\python_docs\developer_guide.py:734
msgid "    name = MyTestAddon"
msgstr ""

#: ..\python_docs\developer_guide.py:735
msgid "    summary = Cool Test Add-on"
msgstr ""

#: ..\python_docs\developer_guide.py:736
msgid "    version = 1.0"
msgstr ""

#: ..\python_docs\developer_guide.py:737
msgid "    description = An example add-on showing how to create add-ons!"
msgstr ""

#: ..\python_docs\developer_guide.py:738
msgid "    author = Michael Curran <mick@kulgan.net>"
msgstr ""

#: ..\python_docs\developer_guide.py:739
msgid "    url = http://www.nvda-project.org/wiki/Development"
msgstr ""

#: ..\python_docs\developer_guide.py:741
msgid "[]{#toc31}"
msgstr ""

#: ..\python_docs\developer_guide.py:742
msgid "### 4.3. Plugins and Drivers"
msgstr ""

#: ..\python_docs\developer_guide.py:743
msgid "The following plugins and drivers can be included in an add-on:"
msgstr ""

#: ..\python_docs\developer_guide.py:744
msgid "-   App modules: Place them in an appModules directory in the archive."
msgstr ""

#: ..\python_docs\developer_guide.py:745
msgid "-   Braille display drivers: Place them in a brailleDisplayDrivers"
msgstr ""

#: ..\python_docs\developer_guide.py:746
msgid "    directory in the archive."
msgstr ""

#: ..\python_docs\developer_guide.py:747
msgid "-   Global plugins: Place them in a globalPlugins directory in the"
msgstr ""

#: ..\python_docs\developer_guide.py:748 ..\python_docs\developer_guide.py:750
msgid "    archive."
msgstr ""

#: ..\python_docs\developer_guide.py:749
msgid "-   Synthesizer drivers: Place them in a synthDrivers directory in the"
msgstr ""

#: ..\python_docs\developer_guide.py:751
msgid "[]{#toc32}"
msgstr ""

#: ..\python_docs\developer_guide.py:752
msgid "### 4.4. Optional install / Uninstall code"
msgstr ""

#: ..\python_docs\developer_guide.py:753
msgid "If you need to execute code as your add-on is being installed or"
msgstr ""

#: ..\python_docs\developer_guide.py:754
msgid "uninstalled from NVDA (e.g. to validate license information or to copy"
msgstr ""

#: ..\python_docs\developer_guide.py:755
msgid "files to a custom location), you can provide a Python file called"
msgstr ""

#: ..\python_docs\developer_guide.py:756
msgid "installTasks.py in the archive which contains special functions that"
msgstr ""

#: ..\python_docs\developer_guide.py:757
msgid "NVDA will call while installing or uninstalling your add-on. This file"
msgstr ""

#: ..\python_docs\developer_guide.py:758
msgid "should avoid loading any modules that are not absolutely necessary,"
msgstr ""

#: ..\python_docs\developer_guide.py:759
msgid "especially Python C extensions or dlls from your own add-on, as this"
msgstr ""

#: ..\python_docs\developer_guide.py:760
msgid "could cause later removal of the add-on to fail. However, if this does"
msgstr ""

#: ..\python_docs\developer_guide.py:761
msgid "happen, the add-on directory will be renamed and then deleted after the"
msgstr ""

#: ..\python_docs\developer_guide.py:762
msgid "next restart of NVDA. Finally, it should not depend on the existence or"
msgstr ""

#: ..\python_docs\developer_guide.py:763
msgid "state of other add-ons, as they may not be installed, have already been"
msgstr ""

#: ..\python_docs\developer_guide.py:764
msgid "removed or not yet be initialized."
msgstr ""

#: ..\python_docs\developer_guide.py:765
msgid "[]{#toc33}"
msgstr ""

#: ..\python_docs\developer_guide.py:766
msgid "#### 4.4.1. the onInstall function"
msgstr ""

#: ..\python_docs\developer_guide.py:767
msgid "NVDA will look for and execute an onInstall function in installTasks.py"
msgstr ""

#: ..\python_docs\developer_guide.py:768
msgid "after it has finished extracting the add-on into NVDA. Note that"
msgstr ""

#: ..\python_docs\developer_guide.py:769
msgid "although the add-on will have been extracted at this time, its directory"
msgstr ""

#: ..\python_docs\developer_guide.py:770
msgid "will have a .pendingInstall suffix until NVDA is restarted, the"
msgstr ""

#: ..\python_docs\developer_guide.py:771
msgid "directory is renamed and the add-on is really loaded for the first time."
msgstr ""

#: ..\python_docs\developer_guide.py:772
msgid "If this function raises an exception, the installation of the add-on"
msgstr ""

#: ..\python_docs\developer_guide.py:773
msgid "will fail and its directory will be cleaned up."
msgstr ""

#: ..\python_docs\developer_guide.py:774
msgid "[]{#toc34}"
msgstr ""

#: ..\python_docs\developer_guide.py:775
msgid "#### 4.4.2. The onUninstall Function"
msgstr ""

#: ..\python_docs\developer_guide.py:776
msgid "NVDA will look for and execute an onUninstall function in"
msgstr ""

#: ..\python_docs\developer_guide.py:777
msgid "installTasks.py when NVDA is restarted after the user has chosen to"
msgstr ""

#: ..\python_docs\developer_guide.py:778
msgid "remove the add-on. After this function completes, the add-on\\'s"
msgstr ""

#: ..\python_docs\developer_guide.py:779
msgid "directory will automatically be removed. As this happens on NVDA startup"
msgstr ""

#: ..\python_docs\developer_guide.py:780
msgid "before other components are initialized, this function cannot request"
msgstr ""

#: ..\python_docs\developer_guide.py:781
msgid "input from the user."
msgstr ""

#: ..\python_docs\developer_guide.py:782
msgid "[]{#toc35}"
msgstr ""

#: ..\python_docs\developer_guide.py:783
msgid "### 4.5. Localizing Add-ons"
msgstr ""

#: ..\python_docs\developer_guide.py:784
msgid "It is possible to provide locale-specific information and messages for"
msgstr ""

#: ..\python_docs\developer_guide.py:785
msgid "your add-on. Locale information can be stored in a locale directory in"
msgstr ""

#: ..\python_docs\developer_guide.py:786
msgid "the archive. This directory should contain directories for each language"
msgstr ""

#: ..\python_docs\developer_guide.py:787
msgid "it supports, using the same language code format as the rest of NVDA;"
msgstr ""

#: ..\python_docs\developer_guide.py:788
msgid "e.g. en for English, fr\\_CA for French Canadian."
msgstr ""

#: ..\python_docs\developer_guide.py:789
msgid "[]{#toc36}"
msgstr ""

#: ..\python_docs\developer_guide.py:790
msgid "#### 4.5.1. Locale-specific Manifest Files"
msgstr ""

#: ..\python_docs\developer_guide.py:791
msgid "Each of these language directories can contain a locale-specific"
msgstr ""

#: ..\python_docs\developer_guide.py:792
msgid "manifest file called manifest.ini, which can contain a small subset of"
msgstr ""

#: ..\python_docs\developer_guide.py:793
msgid "the manifest fields for translation. These fields are summary and"
msgstr ""

#: ..\python_docs\developer_guide.py:794
msgid "description. All other fields will be ignored."
msgstr ""

#: ..\python_docs\developer_guide.py:795
msgid "[]{#toc37}"
msgstr ""

#: ..\python_docs\developer_guide.py:796
msgid "#### 4.5.2. Locale-specific Messages"
msgstr ""

#: ..\python_docs\developer_guide.py:797
msgid "Each language directory can also contain gettext information, which is"
msgstr ""

#: ..\python_docs\developer_guide.py:798
msgid "the system used to translate the rest of NVDA\\'s user interface and"
msgstr ""

#: ..\python_docs\developer_guide.py:799
msgid "reported messages. As with the rest of NVDA, an nvda.mo compiled gettext"
msgstr ""

#: ..\python_docs\developer_guide.py:800
msgid "database file should be placed in the LC\\_MESSAGES directory within this"
msgstr ""

#: ..\python_docs\developer_guide.py:801
msgid "directory. to allow plugins in your add-on to access gettext message"
msgstr ""

#: ..\python_docs\developer_guide.py:802
msgid "information via calls to \\_(), you must initialize translations at the"
msgstr ""

#: ..\python_docs\developer_guide.py:803
msgid "top of each Python module by calling addonHandler.initTranslation(). For"
msgstr ""

#: ..\python_docs\developer_guide.py:804
msgid "more information about gettext and NVDA translation in general, please"
msgstr ""

#: ..\python_docs\developer_guide.py:805
msgid "read <http://www.nvda-project.org/wiki/TranslatingNVDA>"
msgstr ""

#: ..\python_docs\developer_guide.py:806
msgid "[]{#AddonDoc}"
msgstr ""

#: ..\python_docs\developer_guide.py:807
msgid "### 4.6. Add-on Documentation"
msgstr ""

#: ..\python_docs\developer_guide.py:808
msgid "Documentation for an add-on should be placed in a doc directory in the"
msgstr ""

#: ..\python_docs\developer_guide.py:809
msgid "archive. Similar to the locale directory, this directory should contain"
msgstr ""

#: ..\python_docs\developer_guide.py:810
msgid "directories for each language in which documentation is available."
msgstr ""

#: ..\python_docs\developer_guide.py:811
msgid "Users can access documentation for a particular add-on by opening the"
msgstr ""

#: ..\python_docs\developer_guide.py:812
msgid "Add-ons Manager, selecting the add-on and pressing the Add-on help"
msgstr ""

#: ..\python_docs\developer_guide.py:813
msgid "button. This will open the file named in the docFileName parameter of"
msgstr ""

#: ..\python_docs\developer_guide.py:814
msgid "the manifest. NVDA will search for this file in the appropriate language"
msgstr ""

#: ..\python_docs\developer_guide.py:815
msgid "directories. For example, if docFileName is set to readme.html and the"
msgstr ""

#: ..\python_docs\developer_guide.py:816
msgid "user is using English, NVDA will open doc\\\\en\\\\readme.html."
msgstr ""

#: ..\python_docs\developer_guide.py:817
msgid "[]{#PythonConsole}"
msgstr ""

#: ..\python_docs\developer_guide.py:818
msgid "5. NVDA Python Console"
msgstr ""

#: ..\python_docs\developer_guide.py:819
msgid "----------------------"
msgstr ""

#: ..\python_docs\developer_guide.py:820
msgid "The NVDA Python console emulates the interactive Python interpreter from"
msgstr ""

#: ..\python_docs\developer_guide.py:821
msgid "within NVDA. It is a development tool which is useful for debugging,"
msgstr ""

#: ..\python_docs\developer_guide.py:822
msgid "general inspection of NVDA internals or inspection of the accessibility"
msgstr ""

#: ..\python_docs\developer_guide.py:823
msgid "hierarchy of an application."
msgstr ""

#: ..\python_docs\developer_guide.py:824
msgid "[]{#toc40}"
msgstr ""

#: ..\python_docs\developer_guide.py:825
msgid "### 5.1. Usage"
msgstr ""

#: ..\python_docs\developer_guide.py:826
msgid "The console can be activated in two ways:"
msgstr ""

#: ..\python_docs\developer_guide.py:827
msgid "-   By pressing NVDA+control+z. If activated in this fashion, a snapshot"
msgstr ""

#: ..\python_docs\developer_guide.py:828
msgid "    of the current state of NVDA at the time the key was pressed will be"
msgstr ""

#: ..\python_docs\developer_guide.py:829
msgid "    taken and saved in certain variables available in the console. See"
msgstr ""

#: ..\python_docs\developer_guide.py:830
msgid "    [Snapshot Variables](#PythonConsoleSnapshotVariables) for more"
msgstr ""

#: ..\python_docs\developer_guide.py:831
msgid "    details."
msgstr ""

#: ..\python_docs\developer_guide.py:832
msgid "-   By selecting Tools -\\> Python console from the NVDA system tray"
msgstr ""

#: ..\python_docs\developer_guide.py:833
msgid "    menu."
msgstr ""

#: ..\python_docs\developer_guide.py:834
msgid "The console is similar to the standard interactive Python interpreter."
msgstr ""

#: ..\python_docs\developer_guide.py:835
msgid "Input is accepted one line at a time. The current line is processed when"
msgstr ""

#: ..\python_docs\developer_guide.py:836
msgid "enter is pressed. You can navigate through the history of previously"
msgstr ""

#: ..\python_docs\developer_guide.py:837
msgid "entered lines using the up and down arrow keys."
msgstr ""

#: ..\python_docs\developer_guide.py:838
msgid "Output (responses from the interpreter) will be spoken when enter is"
msgstr ""

#: ..\python_docs\developer_guide.py:839
msgid "pressed. The f6 key toggles between the input and output controls."
msgstr ""

#: ..\python_docs\developer_guide.py:840
msgid "Closing the console window simply hides it. This allows the user to"
msgstr ""

#: ..\python_docs\developer_guide.py:841
msgid "return to the session as it was left when it was closed, including"
msgstr ""

#: ..\python_docs\developer_guide.py:842
msgid "history and variables."
msgstr ""

#: ..\python_docs\developer_guide.py:843
msgid "[]{#PythonConsoleNamespace}"
msgstr ""

#: ..\python_docs\developer_guide.py:844
msgid "### 5.2. Namespace"
msgstr ""

#: ..\python_docs\developer_guide.py:845
msgid "[]{#toc42}"
msgstr ""

#: ..\python_docs\developer_guide.py:846
msgid "#### 5.2.1. Automatic Imports"
msgstr ""

#: ..\python_docs\developer_guide.py:847
msgid "For convenience, the following modules and variables are automatically"
msgstr ""

#: ..\python_docs\developer_guide.py:848
msgid "imported in the console: sys, os, wx, log (from logHandler), api,"
msgstr ""

#: ..\python_docs\developer_guide.py:849
msgid "queueHandler, speech, braille"
msgstr ""

#: ..\python_docs\developer_guide.py:850
msgid "[]{#PythonConsoleSnapshotVariables}"
msgstr ""

#: ..\python_docs\developer_guide.py:851
msgid "#### 5.2.2. Snapshot Variables"
msgstr ""

#: ..\python_docs\developer_guide.py:852
msgid "Whenever NVDA+control+z is pressed, certain variables available in the"
msgstr ""

#: ..\python_docs\developer_guide.py:853
msgid "console will be assigned according to the current state of NVDA. These"
msgstr ""

#: ..\python_docs\developer_guide.py:854
msgid "variables are:"
msgstr ""

#: ..\python_docs\developer_guide.py:855
msgid "-   focus: The current focus object"
msgstr ""

#: ..\python_docs\developer_guide.py:856
msgid "-   focusAnc: The ancestors of the current focus object"
msgstr ""

#: ..\python_docs\developer_guide.py:857
msgid "-   fdl: Focus difference level; i.e. the level at which the ancestors"
msgstr ""

#: ..\python_docs\developer_guide.py:858
msgid "    for the current and previous focus differ"
msgstr ""

#: ..\python_docs\developer_guide.py:859
msgid "-   fg: The current foreground object"
msgstr ""

#: ..\python_docs\developer_guide.py:860
msgid "-   nav: The current navigator object"
msgstr ""

#: ..\python_docs\developer_guide.py:861
msgid "-   mouse: The current mouse object"
msgstr ""

#: ..\python_docs\developer_guide.py:862
msgid "-   brlRegions: The braille regions from the active braille buffer"
msgstr ""

#: ..\python_docs\developer_guide.py:863
msgid "[]{#toc44}"
msgstr ""

#: ..\python_docs\developer_guide.py:864
msgid "6. Remote Python Console"
msgstr ""

#: ..\python_docs\developer_guide.py:865
msgid "------------------------"
msgstr ""

#: ..\python_docs\developer_guide.py:866
msgid "A remote Python console is available for situations where remote"
msgstr ""

#: ..\python_docs\developer_guide.py:867
msgid "debugging of NVDA is useful. It is similar to the [local Python"
msgstr ""

#: ..\python_docs\developer_guide.py:868
msgid "console](#PythonConsole) discussed above, but is accessed via TCP."
msgstr ""

#: ..\python_docs\developer_guide.py:869
msgid "Please be aware that this is a huge security risk. You should only"
msgstr ""

#: ..\python_docs\developer_guide.py:870
msgid "enable it if you are connected to trusted networks."
msgstr ""

#: ..\python_docs\developer_guide.py:871
msgid "[]{#toc45}"
msgstr ""

#: ..\python_docs\developer_guide.py:872
msgid "### 6.1. Usage"
msgstr ""

#: ..\python_docs\developer_guide.py:873
msgid "To enable the remote Python console, use the local Python console to"
msgstr ""

#: ..\python_docs\developer_guide.py:874
msgid "import remotePythonConsole and call remotePythonConsole.initialize()."
msgstr ""

#: ..\python_docs\developer_guide.py:875
msgid "You can then connect to it via TCP port 6832."
msgstr ""

#: ..\python_docs\developer_guide.py:876
msgid "History of previously entered lines is not supported."
msgstr ""

#: ..\python_docs\developer_guide.py:877
msgid "The namespace is the same as [the namespace in the local Python"
msgstr ""

#: ..\python_docs\developer_guide.py:878
msgid "console](#PythonConsoleNamespace)."
msgstr ""

#: ..\python_docs\developer_guide.py:879
msgid "There are some special functions:"
msgstr ""

#: ..\python_docs\developer_guide.py:880
msgid "-   snap(): Takes a snapshot of the current state of NVDA and saves it"
msgstr ""

#: ..\python_docs\developer_guide.py:881
msgid "    in the [snapshot variables](#PythonConsoleSnapshotVariables)."
msgstr ""

#: ..\python_docs\developer_guide.py:882
msgid "-   rmSnap(): Removes all snapshot variables."
msgstr ""

